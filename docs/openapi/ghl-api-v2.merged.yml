openapi: 3.0.3
info:
  title: GHL API v2
  description: |
    Enhanced HighLevel APIv2 Documentation by Sergio Leon
  version: '1.0_cbnsndwch_20231013'
servers:
  - url: https://services.leadconnectorhq.com
tags:
  - name: Businesses
  - name: Calendars
  - name: Campaigns
  - name: Contacts
  - name: Contact Appointments
  - name: Contact Campaigns
  - name: Contact Notes
  - name: Contact Search
  - name: Contact Tags
  - name: Contact Tasks
  - name: Contact Workflows
  - name: Conversations
  - name: Custom Fields
  - name: Custom Values
  - name: Forms
  - name: Locations
  - name: Location Notes
  - name: Location Search
  - name: Location Tags
  - name: Location Tasks
  - name: Location Templates
  - name: Media
  - name: OAuth
  - name: Opportunities
  - name: Pipelines
  - name: Snapshots
  - name: Surveys
  - name: Tags
  - name: Templates
  - name: Trigger Links
  - name: Users
  - name: Workflows
components:
  securitySchemes:
    bearer:
      type: http
      description: Either an agency-level or location-level access token
      scheme: bearer
      bearerFormat: JWT
    agencyBearerToken:
      type: http
      description: An agency-level access token
      scheme: bearer
      bearerFormat: JWT
    locationBearerToken:
      type: http
      description: A location-level access token
      scheme: bearer
      bearerFormat: JWT
    refreshToken:
      type: http
      description: A location-level access token
      scheme: bearer
      bearerFormat: JWT
  schemas:
    #region Common
    BadRequestDto:
      type: object
      x-FeatureName: common
      properties:
        statusCode:
          type: number
          example: 400
        message:
          type: string
          example: Bad Request
    UnauthorizedDto:
      type: object
      x-FeatureName: common
      properties:
        statusCode:
          type: number
          example: 401
        message:
          type: string
          example: 'Invalid token: access token is invalid'
        error:
          type: string
          example: Unauthorized
    UnprocessableEntityDto:
      type: object
      x-FeatureName: common
      properties:
        statusCode:
          type: number
          example: 422
        message:
          example:
            - Unprocessable Entity
          type: array
          items:
            type: string
        error:
          type: string
          example: Unprocessable Entity
    CountryCode:
      type: string
      x-FeatureName: common
      enum:
        - AF
        - AX
        - AL
        - DZ
        - AS
        - AD
        - AO
        - AI
        - AQ
        - AG
        - AR
        - AM
        - AW
        - AU
        - AT
        - AZ
        - BS
        - BH
        - BD
        - BB
        - BY
        - BE
        - BZ
        - BJ
        - BM
        - BT
        - BO
        - BA
        - BW
        - BV
        - BR
        - IO
        - BN
        - BG
        - BF
        - BI
        - KH
        - CM
        - CA
        - CV
        - KY
        - CF
        - TD
        - CL
        - CN
        - CX
        - CC
        - CO
        - KM
        - CG
        - CD
        - CK
        - CR
        - CI
        - HR
        - CU
        - CY
        - CZ
        - DK
        - DJ
        - DM
        - DO
        - EC
        - EG
        - SV
        - GQ
        - ER
        - EE
        - ET
        - FK
        - FO
        - FJ
        - FI
        - FR
        - GF
        - PF
        - TF
        - GA
        - GM
        - GE
        - DE
        - GH
        - GI
        - GR
        - GL
        - GD
        - GP
        - GU
        - GT
        - GG
        - GN
        - GW
        - GY
        - HT
        - HM
        - VA
        - HN
        - HK
        - HU
        - IS
        - IN
        - ID
        - IR
        - IQ
        - IE
        - IM
        - IL
        - IT
        - JM
        - JP
        - JE
        - JO
        - KZ
        - KE
        - KI
        - KP
        - KR
        - XK
        - KW
        - KG
        - LA
        - LV
        - LB
        - LS
        - LR
        - LY
        - LI
        - LT
        - LU
        - MO
        - MK
        - MG
        - MW
        - MY
        - MV
        - ML
        - MT
        - MH
        - MQ
        - MR
        - MU
        - YT
        - MX
        - FM
        - MD
        - MC
        - MN
        - ME
        - MS
        - MA
        - MZ
        - MM
        - NA
        - NR
        - NP
        - NL
        - AN
        - NC
        - NZ
        - NI
        - NE
        - NG
        - NU
        - NF
        - MP
        - 'NO'
        - OM
        - PK
        - PW
        - PS
        - PA
        - PG
        - PY
        - PE
        - PH
        - PN
        - PL
        - PT
        - PR
        - QA
        - RE
        - RO
        - RU
        - RW
        - SH
        - KN
        - LC
        - MF
        - PM
        - VC
        - WS
        - SM
        - ST
        - SA
        - SN
        - RS
        - SC
        - SL
        - SG
        - SX
        - SK
        - SI
        - SB
        - SO
        - ZA
        - GS
        - ES
        - LK
        - SD
        - SR
        - SJ
        - SZ
        - SE
        - CH
        - SY
        - TW
        - TJ
        - TZ
        - TH
        - TL
        - TG
        - TK
        - TO
        - TT
        - TN
        - TR
        - TM
        - TC
        - TV
        - UG
        - GB
        - UA
        - AE
        - US
        - UM
        - UY
        - UZ
        - VU
        - VE
        - VN
        - VG
        - VI
        - WF
        - EH
        - YE
        - ZM
        - ZW

    PaginationMeta:
      type: object
      x-FeatureName: common
      properties:
        total:
          type: number
          example: 1
        currentPage:
          type: number
          example: 1
        nextPage:
          type: number
          example: null
          nullable: true
        prevPage:
          type: number
          example: null
          nullable: true
    #endregion Common

    #region Attribution
    AttributionEvent:
      type: object
      x-FeatureName: attribution
      properties:
        fbc:
          type: string
          example: fb.1.123456789.987654321
        fbp:
          type: string
          example: fbp.1.987654321.123456789
        page:
          $ref: '#/components/schemas/AttributionEventPageDetails'
        type:
          type: string
          example: page-visit
        domain:
          type: string
          example: example.com
        medium:
          type: string
          example: survey
        source:
          type: string
          example: Direct traffic
        version:
          type: string
          example: v3
        adSource:
          type: string
          example: example-ad-source
        mediumId:
          type: string
          example: medium-id-123
        parentId:
          type: string
          example: parent-id-456
        referrer:
          type: string
          example: https://staging.gohighlevel.com
        fbEventId:
          type: string
          example: event-id-789
        timestamp:
          type: number
          example: 1234567890
        parentName:
          type: string
          example: Parent Survey
        fingerprint:
          type: string
          example: example-fingerprint
        pageVisitType:
          type: string
          example: survey
        contactSessionIds:
          nullable: true
          $ref: '#/components/schemas/ContactSessionIds'
    ContactSessionIds:
      type: object
      x-FeatureName: attribution
      properties:
        ids:
          type: array
          nullable: true
          items:
            type: string
    AttributionEventPageDetails:
      type: object
      x-FeatureName: attribution
      properties:
        url:
          type: string
          example: https://example.com
        title:
          type: string
          example: Example Page
    #endregion Attribution

    #region Businesses
    Business:
      type: object
      x-FeatureName: businesses
      properties:
        id:
          type: string
          description: Business Id
          example: 63771dcac1116f0e21de8e12
        name:
          type: string
          description: Business Name
          example: Microsoft
        phone:
          type: string
          description: phone number
        email:
          type: string
          description: email
          example: abc@microsoft.com
        website:
          type: string
          description: website
          example: microsoft.com
        address:
          type: string
          description: address
        city:
          type: string
          description: city
        description:
          type: string
          description: description
        state:
          type: string
          description: state
        postalCode:
          type: string
          description: postal code
        country:
          type: string
          description: country
          example: united states
        updatedBy:
          description: updated By
          $ref: '#/components/schemas/BusinessModificationTracking'
        locationId:
          type: string
          description: locaitonId
        createdBy:
          description: Created By
          $ref: '#/components/schemas/BusinessModificationTracking'
        createdAt:
          type: string
          format: date-time
          description: Creation Time
        updatedAt:
          type: string
          format: date-time
          description: Last updation time
      required:
        - id
        - name
        - locationId
    BusinessModificationTracking:
      type: object
      x-FeatureName: businesses
      properties: {}
    ListBusinessesResponse:
      type: object
      x-FeatureName: businesses
      properties:
        businesses:
          description: Business Response
          type: array
          items:
            $ref: '#/components/schemas/Business'
      required:
        - businesses
    CreateBusinessInput:
      type: object
      x-FeatureName: businesses
      properties:
        name:
          type: string
          example: Microsoft
        locationId:
          type: string
          example: 5DP4iH6HLkQsiKESj6rh
        phone:
          type: string
          example: '+18832327657'
        email:
          type: string
          example: john@deo.com
        website:
          type: string
          example: www.xyz.com
        address:
          type: string
          example: street adress
        city:
          type: string
          example: new york
        postalCode:
          type: string
          example: '12312312'
        state:
          type: string
          example: new york
        country:
          type: string
          example: us
        description:
          type: string
          example: business description
      required:
        - name
        - locationId
    CreateOrUpdateBusinessResponse:
      type: object
      x-FeatureName: businesses
      properties:
        success:
          type: boolean
          description: Success Value
          example: true
        buiseness:
          description: Business Response
          $ref: '#/components/schemas/Business'
      required:
        - success
        - buiseness
    UpdateBusinessInput:
      type: object
      x-FeatureName: businesses
      properties:
        name:
          type: string
          example: Microsoft
        phone:
          type: string
          example: '+18832327657'
        email:
          type: string
          example: john@deo.com
        postalCode:
          type: string
          example: '12312312'
        website:
          type: string
          example: www.xyz.com
        address:
          type: string
          example: street adress
        state:
          type: string
          example: new york
        city:
          type: string
          example: new york
        country:
          type: string
          example: us
        description:
          type: string
          example: business description
    DeleteBusinessResponse:
      type: object
      x-FeatureName: businesses
      properties:
        success:
          type: boolean
          description: Success value
          example: true
      required:
        - success
    GetBusinessResponse:
      type: object
      x-FeatureName: businesses
      properties:
        business:
          description: Business Response
          $ref: '#/components/schemas/Business'
      required:
        - business
    #endregion Businesses

    #region Calendars
    CalendarGroup:
      type: object
      x-FeatureName: calendars
      properties:
        id:
          type: string
        locationId:
          type: string
        name:
          type: string
        description:
          type: string
        slug:
          type: string
        isActive:
          type: boolean
    CreateCalendarGroupDto:
      type: object
      x-FeatureName: calendars
      properties:
        id:
          type: string
        locationId:
          type: string
        name:
          type: string
        description:
          type: string
        slug:
          type: string
        isActive:
          type: boolean
      required:
        - locationId
        - name
        - description
        - slug
    ListCalendarGroupsResponse:
      type: object
      x-FeatureName: calendars
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/CalendarGroup'
    ValidateCalendarGroupSlugInput:
      type: object
      x-FeatureName: calendars
      properties:
        locationId:
          type: string
          description: Location Id
          example: ve9EPM428h8vShlRW1KT
        slug:
          type: string
          description: Slug
          example: calendar-1
      required:
        - locationId
        - slug
    ValidateCalendarGroupSlugResponse:
      type: object
      x-FeatureName: calendars
      properties:
        available:
          type: boolean
      required:
        - available
    CreateOrUpdateCalendarGroupResponse:
      type: object
      x-FeatureName: calendars
      properties:
        group:
          $ref: '#/components/schemas/CreateCalendarGroupDto'
    DeleteCalendarGroupResponse:
      type: object
      x-FeatureName: calendars
      properties:
        success:
          type: boolean
          description: Success
          example: 'true'
    UpdateCalendarGroupStatusInput:
      type: object
      x-FeatureName: calendars
      properties:
        isActive:
          type: boolean
          description: Is Active?
          example: true
      required:
        - isActive
    UpdateCalendarGroupStatusResponse:
      type: object
      x-FeatureName: calendars
      properties:
        success:
          type: boolean
          description: Success
          example: 'true'
    UpdateCalendarGroupInput:
      type: object
      x-FeatureName: calendars
      properties:
        id:
          type: string
          example: ocQHyuzHvysMo5N5VsXc
        name:
          type: string
          example: group a
        description:
          type: string
          example: group description
        slug:
          type: string
          example: 15-mins
      required:
        - name
        - description
        - slug
    CalendarEvent:
      type: object
      x-FeatureName: calendars
      properties:
        id:
          type: string
          description: Calendar Event ID
          example: 0007BWpSzSwfiuSl0tR2
        title:
          type: string
          description: Calendar Event title
          example: Appointment with GHL Dev team
        calendarId:
          type: string
          description: Calendar ID
          example: BqTwX8QFwXzpegMve9EQ
        locationId:
          type: string
          description: Location ID
          example: 0007BWpSzSwfiuSl0tR2
        contactId:
          type: string
          description: Contact ID
          example: 9NkT25Vor1v4aQatFsv2
        groupId:
          type: string
          description: Group ID
          example: 9NkT25Vor1v4aQatFsv2
        appointmentStatus:
          type: object
          description: Appointment Event Status
          example: confirmed
        assignedUserId:
          type: string
          description: AssignedUser - the primary owner of an appointment
          example: YlWd2wuCAZQzh2cH1fVZ
        users:
          description: Users - the secondary owners of an appointment.
          example:
            - YlWd2wuCAZQzh2cH1fVZ
            - 9NkT25Vor1v4aQatFsv2
          type: array
          items:
            type: string
        startTime:
          type: object
          description: Start Time
          example: '2023-09-25T16:00:00+05:30'
        endTime:
          type: object
          description: End Time
          example: '2023-09-25T16:00:00+05:30'
      required:
        - id
        - title
        - calendarId
        - locationId
        - contactId
        - groupId
        - appointmentStatus
        - assignedUserId
        - users
        - startTime
        - endTime
    ListCalendarEventsResponse:
      type: object
      x-FeatureName: calendars
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/CalendarEvent'
    CalendarSlotsDateEntry:
      type: object
      x-FeatureName: calendars
      properties:
        slots:
          type: array
          items:
            type: string
      required:
        - slots
    GetCalendarAvailableSlotsResponse:
      type: object
      x-FeatureName: calendars
      description: |
        A dictionary of date strings to available slots for the date.
      additionalProperties:
        $ref: '#/components/schemas/CalendarSlotsDateEntry'
      required:
        - _dates_
    Calendar:
      type: object
      x-FeatureName: calendars
      properties:
        id:
          type: string
          example: 0TkCdp9PfvLeWKYRRvIz
        locationId:
          type: string
          example: ocQHyuzHvysMo5N5VsXc
        groupId:
          type: string
          description: Group Id
          example: BqTwX8QFwXzpegMve9EQ
        name:
          type: string
          example: test calendar
        description:
          type: string
          example: this is used for testing
        slug:
          type: string
          example: test1
        isActive:
          type: boolean
          example: true
        openHours:
          example: []
          type: array
          items:
            type: string
      required:
        - id
        - locationId
        - name
    CalendarResponse:
      type: object
      x-FeatureName: calendars
      properties:
        calendar:
          $ref: '#/components/schemas/Calendar'
      required:
        - calendar
    ListCalendarsResponse:
      type: object
      x-FeatureName: calendars
      properties:
        calendars:
          type: array
          items:
            $ref: '#/components/schemas/Calendar'
    CalendarNotificationOptions:
      type: object
      x-FeatureName: calendars
      properties:
        type:
          type: string
        shouldSendToContact:
          type: boolean
        shouldSendToGuest:
          type: boolean
        shouldSendToUser:
          type: boolean
        shouldSendToSelectedUsers:
          type: boolean
        selectedUsers:
          type: string
          description: Comma separated emails
          example: user1@testemail.com,user2@testemail.com
      required:
        - type
        - shouldSendToContact
        - shouldSendToGuest
        - shouldSendToUser
        - shouldSendToSelectedUsers
        - selectedUsers
    TeamMember:
      type: object
      x-FeatureName: calendars
      properties:
        userId:
          type: string
          example: ocQHyuzHvysMo5N5VsXc
        priority:
          type: number
          default: 0.5
          x-enumNames:
            - PRIORITY_LOW
            - PRIORITY_MEDIUM
            - PRIORITY_HIGH
          enum:
            - 0
            - 0.5
            - 1
        meetingLocationType:
          type: string
          description: Meeting Location Type
          example: custom
          default: custom
        meetingLocation:
          type: string
      required:
        - userId
    Hour:
      type: object
      x-FeatureName: calendars
      properties:
        openHour:
          type: number
          minimum: 0
          maximum: 23
        openMinute:
          type: number
          minimum: 0
          maximum: 60
        closeHour:
          type: number
          minimum: 0
          maximum: 23
        closeMinute:
          type: number
          minimum: 0
          maximum: 60
      required:
        - openHour
        - openMinute
        - closeHour
        - closeMinute
    OpenHour:
      type: object
      x-FeatureName: calendars
      properties:
        daysOfTheWeek:
          type: array
          items:
            type: number
            maximum: 6
            minimum: 0
        hours:
          type: array
          items:
            $ref: '#/components/schemas/Hour'
      required:
        - daysOfTheWeek
        - hours
    CalendarEventType:
      type: string
      x-FeatureName: calendars
      x-EnumNames:
        - ROUND_ROBIN_OPTIMIZE_FOR_AVAILABILITY
        - ROUND_ROBIN_OPTIMIZE_FOR_EQUAL_DISTRIBUTION
        - COLLECTIVE
        - GROUP
      enum:
        - RoundRobin_OptimizeForAvailability
        - RoundRobin_OptimizeForEqualDistribution
        - Collective
        - Group
    CreateCalendarInput:
      type: object
      x-FeatureName: calendars
      properties:
        notifications:
          description: Calendar Notifications
          type: array
          items:
            $ref: '#/components/schemas/CalendarNotificationOptions'
        locationId:
          type: string
          example: ocQHyuzHvysMo5N5VsXc
        groupId:
          type: string
          description: Group Id
          example: BqTwX8QFwXzpegMve9EQ
        teamMembers:
          description: Team members
          type: array
          items:
            $ref: '#/components/schemas/TeamMember'
        eventType:
          default: RoundRobin_OptimizeForAvailability
          $ref: '#/components/schemas/CalendarEventType'
        name:
          type: string
          example: test calendar
        description:
          type: string
          example: this is used for testing
        slug:
          type: string
          example: test1
        widgetSlug:
          type: string
          example: test1
        calendarType:
          type: string
          example: test1
        widgetType:
          type: string
          example: classic
        eventTitle:
          type: string
          default: '{{contact.name}}'
        eventColor:
          type: string
          default: '#039be5'
        meetingLocation:
          type: string
        slotDuration:
          type: number
          default: 30
        slotInterval:
          type: number
          default: 30
        slotBuffer:
          type: number
        appoinmentPerSlot:
          type: number
          default: 1
        appoinmentPerDay:
          type: number
        openHours:
          type: array
          items:
            $ref: '#/components/schemas/OpenHour'
        formId:
          type: string
        stickyContact:
          type: boolean
        autoConfirm:
          type: boolean
          default: true
        shouldSendAlertEmailsToAssignedMember:
          type: boolean
        alertEmail:
          type: string
        googleInvitationEmails:
          type: boolean
          default: false
        allowReschedule:
          type: boolean
          default: true
        allowCancellation:
          type: boolean
          default: true
        shouldAssignContactToTeamMember:
          type: boolean
        shouldSkipAssigningContactForExisting:
          type: boolean
        notes:
          type: string
        pixelId:
          type: string
        formSubmitType:
          type: string
          default: ThankYouMessage
          enum:
            - RedirectURL
            - ThankYouMessage
        formSubmitRedirectURL:
          type: string
        formSubmitThanksMessage:
          type: string
        guestType:
          type: string
          enum:
            - count_only
            - collect_detail
        consentLabel:
          type: string
      required:
        - locationId
        - name
    Recurring:
      type: object
      x-FeatureName: calendars
      properties: {}
    Availability:
      type: object
      x-FeatureName: calendars
      properties:
        id:
          type: string
        calendarId:
          type: object
        date:
          type: string
        hours:
          type: array
          items:
            $ref: '#/components/schemas/Hour'
        deleted:
          type: boolean
      required:
        - id
        - calendarId
        - date
        - hours
        - deleted
    UpdateCalendarInput:
      type: object
      x-FeatureName: calendars
      properties:
        notifications:
          description: Calendar Notifications
          type: array
          items:
            $ref: '#/components/schemas/CalendarNotificationOptions'
        groupId:
          type: string
          description: Group Id
          example: BqTwX8QFwXzpegMve9EQ
        teamMembers:
          description: Team members
          type: array
          items:
            $ref: '#/components/schemas/TeamMember'
        eventType:
          $ref: '#/components/schemas/CalendarEventType'
        name:
          type: string
          example: test calendar
        description:
          type: string
          example: this is used for testing
        slug:
          type: string
          example: test1
        widgetSlug:
          type: string
          example: test1
        calendarType:
          type: string
          example: test1
        widgetType:
          type: string
          example: classic
        eventTitle:
          type: string
        eventColor:
          type: string
        meetingLocation:
          type: string
        slotDuration:
          type: number
        slotInterval:
          type: object
        slotBuffer:
          type: number
        appoinmentPerSlot:
          type: number
        appoinmentPerDay:
          type: number
        openHours:
          type: array
          items:
            $ref: '#/components/schemas/OpenHour'
        enableRecurring:
          type: boolean
        recurring:
          $ref: '#/components/schemas/Recurring'
        formId:
          type: string
        stickyContact:
          type: boolean
        isLivePaymentMode:
          type: boolean
        autoConfirm:
          type: boolean
        shouldSendAlertEmailsToAssignedMember:
          type: boolean
        alertEmail:
          type: string
        googleInvitationEmails:
          type: boolean
        allowReschedule:
          type: boolean
        allowCancellation:
          type: boolean
        shouldAssignContactToTeamMember:
          type: boolean
        shouldSkipAssigningContactForExisting:
          type: boolean
        notes:
          type: string
        pixelId:
          type: string
        formSubmitType:
          type: string
          default: ThankYouMessage
          enum:
            - RedirectURL
            - ThankYouMessage
        formSubmitRedirectURL:
          type: string
        formSubmitThanksMessage:
          type: string
        availabilityType:
          type: number
          example: 0
        availabilities:
          type: array
          items:
            $ref: '#/components/schemas/Availability'
        guestType:
          type: string
          enum:
            - count_only
            - collect_detail
        consentLabel:
          type: string
    AppointmentResponse:
      type: object
      x-FeatureName: calendars
      properties:
        calendarId:
          type: string
          description: Calendar Id
          example: CVokAlI8fgw4WYWoCtQz
        locationId:
          type: string
          description: Location Id
          example: C2QujeCh8ZnC7al2InWR
        contactId:
          type: string
          description: Contact Id
          example: 0007BWpSzSwfiuSl0tR2
        startTime:
          type: string
          description: Start Time
          example: '2021-06-23T03:30:00+05:30'
        endTime:
          type: string
          description: End Time
          example: '2021-06-23T04:30:00+05:30'
        title:
          type: string
          description: Title
          example: Test Event
        appointmentStatus:
          type: string
          example: confirmed
          enum:
            - new
            - confirmed
            - cancelled
            - showed
            - noshow
            - invalid
        assignedUserId:
          type: string
          description: Assigned User Id
          example: 0007BWpSzSwfiuSl0tR2
        address:
          type: string
          description: Appointment Address
          example: Zoom
        id:
          type: string
          description: Id
          example: 0TkCdp9PfvLeWKYRRvIz
      required:
        - calendarId
        - locationId
        - contactId
        - id
    CreateAppointmentInput:
      type: object
      x-FeatureName: calendars
      properties:
        calendarId:
          type: string
          description: Calendar Id
          example: CVokAlI8fgw4WYWoCtQz
        locationId:
          type: string
          description: Location Id
          example: C2QujeCh8ZnC7al2InWR
        contactId:
          type: string
          description: Contact Id
          example: 0007BWpSzSwfiuSl0tR2
        startTime:
          type: string
          description: Start Time
          example: '2021-06-23T03:30:00+05:30'
        endTime:
          type: string
          description: End Time
          example: '2021-06-23T04:30:00+05:30'
        title:
          type: string
          description: Title
          example: Test Event
        appointmentStatus:
          type: string
          example: confirmed
          enum:
            - new
            - confirmed
            - cancelled
            - showed
            - noshow
            - invalid
        assignedUserId:
          type: string
          description: Assigned User Id
          example: 0007BWpSzSwfiuSl0tR2
        address:
          type: string
          description: Appointment Address
          example: Zoom
        ignoreDateRange:
          type: boolean
          description: If set to true, the minimum scheduling notice and date range would be ignored
          example: false
        toNotify:
          type: boolean
          description: If set to false, the automations will not run
          example: false
      required:
        - calendarId
        - locationId
        - contactId
        - startTime
    UpdateAppointmentInput:
      type: object
      x-FeatureName: calendars
      properties:
        calendarId:
          type: string
          description: Calendar Id
          example: CVokAlI8fgw4WYWoCtQz
        startTime:
          type: string
          description: Start Time
          example: '2021-06-23T03:30:00+05:30'
        endTime:
          type: string
          description: End Time
          example: '2021-06-23T04:30:00+05:30'
        title:
          type: string
          description: Title
          example: Test Event
        appointmentStatus:
          type: string
          example: confirmed
          enum:
            - new
            - confirmed
            - cancelled
            - showed
            - noshow
            - invalid
        address:
          type: string
          description: Appointment Address
          example: Zoom
        ignoreDateRange:
          type: boolean
          description: If set to true, the minimum scheduling notice and date range would be ignored
          example: false
        toNotify:
          type: boolean
          description: If set to false, the automations will not run
          example: false
    CreateBlockedSlotInput:
      type: object
      x-FeatureName: calendars
      properties:
        calendarId:
          type: string
          description: Calendar Id
          example: CVokAlI8fgw4WYWoCtQz
        locationId:
          type: string
          description: Location Id
          example: C2QujeCh8ZnC7al2InWR
        startTime:
          type: string
          description: Start Time
          example: '2021-06-23T03:30:00+05:30'
        endTime:
          type: string
          description: End Time
          example: '2021-06-23T04:30:00+05:30'
        title:
          type: string
          description: Title
          example: Test Event
        assignedUserId:
          type: string
          description: Assigned User Id
          example: CVokAlI8fgw4WYWoCtQz
      required:
        - locationId
        - startTime
        - endTime
    BlockedSlotResponse:
      type: object
      x-FeatureName: calendars
      properties:
        id:
          type: string
          description: Id
          example: 0TkCdp9PfvLeWKYRRvIz
        locationId:
          type: string
          description: Location Id
          example: C2QujeCh8ZnC7al2InWR
        title:
          type: string
          description: Title
          example: My event
        startTime:
          type: string
          description: Start Time
          example: '2021-06-23T03:30:00+05:30'
        endTime:
          type: string
          description: End Time
          example: '2021-06-23T04:30:00+05:30'
        calendarId:
          type: string
          description: Calendar id
          example: CVokAlI8fgw4WYWoCtQz
        assignedUserId:
          type: string
          description: Assigned User Id
          example: 0007BWpSzSwfiuSl0tR2
      required:
        - id
        - locationId
        - title
        - startTime
        - endTime
    UpdateBlockedSlotInput:
      type: object
      x-FeatureName: calendars
      properties:
        calendarId:
          type: string
          description: Calendar Id
          example: CVokAlI8fgw4WYWoCtQz
        startTime:
          type: string
          description: Start Time
          example: '2021-06-23T03:30:00+05:30'
        endTime:
          type: string
          description: End Time
          example: '2021-06-23T04:30:00+05:30'
        title:
          type: string
          description: Title
          example: Test Event
        assignedUserId:
          type: string
          description: Assigned User Id
          example: CVokAlI8fgw4WYWoCtQz
    DeleteAppointmentInput:
      type: object
      x-FeatureName: calendars
      description: |
        Ask the GHL API team to update Stoplight for this schema
      additionalProperties: true
    DeleteCalendarEventResponse:
      type: object
      x-FeatureName: calendars
      properties:
        succeeded:
          type: boolean
          example: true
    #endregion Calendars

    #region Campaigns
    Campaign:
      type: object
      x-FeatureName: campaigns
      deprecated: true
      description: |
        **NOTE:** Campaigns are deprecated. Use workflows instead.
      properties:
        id:
          type: string
          example: mIVALPYuTD7YjUHnFEx4
        name:
          type: string
          example: test
        status:
          type: string
          example: published
        locationId:
          type: string
          example: ve9EPM428h8vShlRW1KT
    ListCampaignsResponse:
      type: object
      x-FeatureName: campaigns
      deprecated: true
      description: |
        **NOTE:** Campaigns are deprecated. Use workflows instead.
      properties:
        campaigns:
          type: array
          items:
            $ref: '#/components/schemas/Campaign'
    #endregion Campaigns

    #region Contacts
    Contact:
      type: object
      x-FeatureName: contacts
      properties:
        id:
          type: string
          example: seD4PfOuKoVMLkEZqohJ
        name:
          type: string
          example: rubika deo
        locationId:
          type: string
          example: ve9EPM428h8vShlRW1KT
        firstName:
          type: string
          example: rubika
        lastName:
          type: string
          example: Deo
        email:
          type: string
          example: rubika@deos.com
        emailLowerCase:
          type: string
          example: rubika@deos.com
        timezone:
          type: string
          example: ''
        companyName:
          type: string
          example: DGS VolMAX
        phone:
          type: string
          example: '+18832327657'
        dnd:
          type: boolean
          example: true
        dndSettings:
          $ref: '#/components/schemas/ContactDndSettings'
        type:
          type: string
          example: read
        source:
          type: string
          example: public api
        assignedTo:
          type: string
          example: ve9EPM428h8vShlRW1KT
        address1:
          type: string
          example: 3535 1st St N
        city:
          type: string
          example: ruDolomitebika
        state:
          type: string
          example: AL
        country:
          type: string
          example: US
        postalCode:
          type: string
          example: '35061'
        website:
          type: string
          example: https://www.tesla.com
        tags:
          example:
            - nisi sint commodo amet
            - consequat
          type: array
          items:
            type: string
        dateOfBirth:
          type: string
          example: '1990-09-25T00:00:00.000Z'
        dateAdded:
          type: string
          example: '2021-07-02T05:18:26.704Z'
        dateUpdated:
          type: string
          example: '2021-07-02T05:18:26.704Z'
        attachments:
          type: string
        ssn:
          type: string
        gender:
          type: string
          example: male
        keyword:
          type: string
          example: test
        firstNameLowerCase:
          type: string
          example: rubika
        fullNameLowerCase:
          type: string
          example: rubika deo
        lastNameLowerCase:
          type: string
          example: deo
        lastActivity:
          type: string
          example: '2021-07-16T11:39:30.564Z'
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/ContactCustomField'
        businessId:
          type: string
          example: 641c094001436dbc2081e642
        attributionSource:
          $ref: '#/components/schemas/ContactAttributionSource'
        lastAttributionSource:
          $ref: '#/components/schemas/ContactAttributionSource'
    GetContactResponse:
      type: object
      x-FeatureName: contacts
      properties:
        contact:
          $ref: '#/components/schemas/Contact'
    CreateContactInput:
      type: object
      x-FeatureName: contacts
      properties:
        firstName:
          type: string
          example: Rosan
          nullable: true
        lastName:
          type: string
          example: Deo
          nullable: true
        name:
          type: string
          example: Rosan Deo
          nullable: true
        email:
          type: string
          example: rosan@deos.com
          nullable: true
        locationId:
          type: string
          example: ve9EPM428h8vShlRW1KT
        gender:
          type: string
          example: male
        phone:
          type: string
          example: +1 888-888-8888
          nullable: true
        address1:
          type: string
          example: 3535 1st St N
          nullable: true
        city:
          type: string
          example: Dolomite
          nullable: true
        state:
          type: string
          example: AL
          nullable: true
        postalCode:
          type: string
          example: '35061'
        website:
          type: string
          example: https://www.tesla.com
          nullable: true
        timezone:
          type: string
          example: America/Chihuahua
          nullable: true
        dnd:
          type: boolean
          example: true
        dndSettings:
          $ref: '#/components/schemas/ContactDndSettings'
        inboundDndSettings:
          $ref: '#/components/schemas/ContactInboundDndSettings'
        tags:
          example:
            - nisi sint commodo amet
            - consequat
          type: array
          items:
            type: string
        customFields:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/CustomFieldStringInput'
              - $ref: '#/components/schemas/CustomFieldArrayInput'
              - $ref: '#/components/schemas/CustomFieldObjectInput'
        source:
          type: string
          example: public api
        country:
          type: string
          example: US
        companyName:
          type: string
          example: DGS VolMAX
          nullable: true
      required:
        - locationId
    CreateContactResponse:
      type: object
      x-FeatureName: contacts
      properties:
        contact:
          $ref: '#/components/schemas/CreateContactResponseDto'
    CreateContactResponseDto:
      type: object
      x-FeatureName: contacts
      properties:
        id:
          type: string
          example: seD4PfOuKoVMLkEZqohJ
        dateAdded:
          type: string
          example: '2021-08-31T09:59:41.937Z'
        dateUpdated:
          type: string
          example: '2021-08-31T09:59:41.937Z'
        deleted:
          type: boolean
          example: false
        tags:
          example:
            - nisi sint commodo amet
            - consequat
          type: array
          items:
            type: string
        type:
          type: string
          example: read
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/ContactCustomField'
        locationId:
          type: string
          example: ve9EPM428h8vShlRW1KT
        firstName:
          type: string
          example: rubika
        firstNameLowerCase:
          type: string
          example: rubika
        fullNameLowerCase:
          type: string
          example: rubika deo
        lastName:
          type: string
          example: Deo
        lastNameLowerCase:
          type: string
          example: deo
        email:
          type: string
          example: rubika@deos.com
        emailLowerCase:
          type: string
          example: rubika@deos.com
        bounceEmail:
          type: boolean
          example: false
        unsubscribeEmail:
          type: boolean
          example: false
        dnd:
          type: boolean
          example: true
        dndSettings:
          $ref: '#/components/schemas/ContactDndSettings'
        phone:
          type: string
          example: '+18832327657'
        address1:
          type: string
          example: 3535 1st St N
        city:
          type: string
          example: ruDolomitebika
        state:
          type: string
          example: AL
        country:
          type: string
          example: US
        postalCode:
          type: string
          example: '35061'
        website:
          type: string
          example: https://www.tesla.com
        source:
          type: string
          example: public api
        companyName:
          type: string
          example: DGS VolMAX
        dateOfBirth:
          type: string
          example: '1990-09-25T00:00:00.000Z'
        birthMonth:
          type: number
          example: 8
        birthDay:
          type: number
          example: 25
        lastSessionActivityAt:
          type: string
          example: '2021-07-16T11:39:30.564Z'
        offers:
          example: []
          type: array
          items:
            type: string
        products:
          example: []
          type: array
          items:
            type: string
        businessId:
          type: string
          example: 641c094001436dbc2081e642
    UpdateContactInput:
      type: object
      x-FeatureName: contacts
      properties:
        firstName:
          type: string
          example: rosan
          nullable: true
        lastName:
          type: string
          example: Deo
          nullable: true
        name:
          type: string
          example: rosan Deo
          nullable: true
        email:
          type: string
          example: rosan@deos.com
          nullable: true
        phone:
          type: string
          example: +1 888-888-8888
          nullable: true
        address1:
          type: string
          example: 3535 1st St N
          nullable: true
        city:
          type: string
          example: Dolomite
          nullable: true
        state:
          type: string
          example: AL
          nullable: true
        postalCode:
          type: string
          example: '35061'
        website:
          type: string
          example: https://www.tesla.com
          nullable: true
        timezone:
          type: string
          example: America/Chihuahua
          nullable: true
        dnd:
          type: boolean
          example: true
        dndSettings:
          $ref: '#/components/schemas/ContactDndSettings'
        inboundDndSettings:
          $ref: '#/components/schemas/ContactInboundDndSettings'
        tags:
          example:
            - nisi sint commodo amet
            - consequat
          type: array
          items:
            type: string
        customFields:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/CustomFieldStringInput'
              - $ref: '#/components/schemas/CustomFieldArrayInput'
              - $ref: '#/components/schemas/CustomFieldObjectInput'
        source:
          type: string
          example: public api
          nullable: true
        country:
          type: string
          example: US
    UpdateContactsResponse:
      type: object
      x-FeatureName: contacts
      properties:
        succeded:
          type: boolean
          example: true
        contact:
          $ref: '#/components/schemas/Contact'
    UpsertContactInput:
      type: object
      x-FeatureName: contacts
      properties:
        firstName:
          type: string
          example: Rosan
          nullable: true
        lastName:
          type: string
          example: Deo
          nullable: true
        name:
          type: string
          example: Rosan Deo
          nullable: true
        email:
          type: string
          example: rosan@deos.com
          nullable: true
        locationId:
          type: string
          example: ve9EPM428h8vShlRW1KT
        gender:
          type: string
          example: male
        phone:
          type: string
          example: +1 888-888-8888
          nullable: true
        address1:
          type: string
          example: 3535 1st St N
          nullable: true
        city:
          type: string
          example: Dolomite
          nullable: true
        state:
          type: string
          example: AL
          nullable: true
        postalCode:
          type: string
          example: '35061'
        website:
          type: string
          example: https://www.tesla.com
          nullable: true
        timezone:
          type: string
          example: America/Chihuahua
          nullable: true
        dnd:
          type: boolean
          example: true
        dndSettings:
          $ref: '#/components/schemas/ContactDndSettings'
        inboundDndSettings:
          $ref: '#/components/schemas/ContactInboundDndSettings'
        tags:
          example:
            - nisi sint commodo amet
            - consequat
          type: array
          items:
            type: string
        customFields:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/CustomFieldStringInput'
              - $ref: '#/components/schemas/CustomFieldArrayInput'
              - $ref: '#/components/schemas/CustomFieldObjectInput'
        source:
          type: string
          example: public api
        country:
          type: string
          example: US
        companyName:
          type: string
          example: DGS VolMAX
          nullable: true
      required:
        - locationId
    UpsertContactsResponse:
      type: object
      x-FeatureName: contacts
      properties:
        new:
          type: boolean
          example: true
        contact:
          $ref: '#/components/schemas/Contact'
        traceId:
          type: string
    DeleteContactsResponse:
      type: object
      x-FeatureName: contacts
      properties:
        succeded:
          type: boolean
          example: true
    ContactsMetaSchema:
      type: object
      x-FeatureName: contacts
      properties:
        total:
          type: number
          example: 50
        nextPageUrl:
          type: string
          example: http://localhost:5058/contacts/?locationId=ve9EPM428h8vShlRW1KT&startAfter=1631087949919&startAfterId=yd0jdjOavGk2o6Nh5Ndb
        startAfterId:
          type: string
          example: yd0jdjOavGk2o6Nh5Ndb
        startAfter:
          type: number
          example: 1631087949919
        currentPage:
          type: number
          example: 2
        nextPage:
          type: number
          example: 3
        prevPage:
          type: number
          example: 1
          nullable: true
    ListContactsResponse:
      type: object
      x-FeatureName: contacts
      properties:
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/ListContactsResponseDto'
        count:
          type: number
          example: 10
    ListContactsResponseDto:
      type: object
      x-FeatureName: contacts
      properties:
        id:
          type: string
          example: ocQHyuzHvysMo5N5VsXc
        locationId:
          type: string
          example: C2QujeCh8ZnC7al2InWR
        email:
          type: string
          example: JohnDeo@gmail.com
        timezone:
          type: string
          example: Asia/Calcutta
        country:
          type: string
          example: DE
        source:
          type: string
          example: xyz form
        dateAdded:
          type: string
          example: '2020-10-29T09:31:30.255Z'
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/ContactCustomField'
        tags:
          example:
            - nisi sint commodo amet
            - consequat
          type: array
          items:
            type: string
        businessId:
          type: string
          example: 641c094001436dbc2081e642
        attributions:
          type: array
          items:
            $ref: '#/components/schemas/ContactAttributionSource'
    UpdateBusinessContactsInput:
      type: object
      x-FeatureName: contacts
      properties:
        locationId:
          type: string
          example: PX8m5VwxEbcpFlzYEPVG
        ids:
          example:
            - IDqvFHGColiyK6jiatuz
            - pOC0uJ97VYOKH2m3fkMD
          type: array
          items:
            type: string
            maxLength: 50
        businessId:
          type: string
          example: 63b7ec34ea409a9a8bd2a4ff
          nullable: true
      required:
        - locationId
        - ids
        - businessId
    ContactsBulkUpdateResponse:
      type: object
      x-FeatureName: contacts
      properties:
        success:
          type: boolean
          example: true
        ids:
          example:
            - pOC0uJ97VYOKH2m3fkMD
          type: array
          items:
            type: string
      required:
        - success
        - ids
    ChannelDndSettings:
      type: object
      x-FeatureName: contacts
      properties:
        status:
          type: string
          enum:
            - active
            - inactive
            - permanent
        message:
          type: string
        code:
          type: string
      required:
        - status
    ContactDndSettings:
      type: object
      x-FeatureName: contacts
      properties:
        Call:
          $ref: '#/components/schemas/ChannelDndSettings'
        Email:
          $ref: '#/components/schemas/ChannelDndSettings'
        SMS:
          $ref: '#/components/schemas/ChannelDndSettings'
        WhatsApp:
          $ref: '#/components/schemas/ChannelDndSettings'
        GMB:
          $ref: '#/components/schemas/ChannelDndSettings'
        FB:
          $ref: '#/components/schemas/ChannelDndSettings'
    ChannelInboundDndSettings:
      type: object
      x-FeatureName: contacts
      properties:
        status:
          type: string
          enum:
            - active
            - inactive
        message:
          type: string
      required:
        - status
    ContactInboundDndSettings:
      type: object
      x-FeatureName: contacts
      properties:
        all:
          $ref: '#/components/schemas/ChannelInboundDndSettings'
    ContactCustomField:
      type: object
      x-FeatureName: contacts
      properties:
        id:
          type: string
          example: MgobCB14YMVKuE4Ka8p1
        value:
          type: string
          example: name
    ContactAttributionSource:
      type: object
      x-FeatureName: contacts
      properties:
        url:
          type: string
          example: Trigger Link
        campaign:
          type: string
          nullable: true
        utmSource:
          type: string
          nullable: true
        utmMedium:
          type: string
          nullable: true
        utmContent:
          type: string
          nullable: true
        referrer:
          type: string
          example: 'https: //www.google.com'
          nullable: true
        campaignId:
          type: string
          nullable: true
        fbclid:
          type: string
          nullable: true
        gclid:
          type: string
          example: CjOKCQjwnNyUBhCZARISAI9AYIFtNnIcWcYGIOQINz_ZoFI5SSLRRugSoPZoiEu27IZBY£1-MAIWmEaAo2VEALW_WCB
          nullable: true
        msclikid:
          type: string
          nullable: true
        dclid:
          type: string
          nullable: true
        fbc:
          type: string
          nullable: true
        fbp:
          type: string
          example: fb. 1.1674748390986.1171287961
          nullable: true
        fbEventId:
          type: string
          example: Mozilla/5.0
          nullable: true
        userAgent:
          type: string
          example: Mozilla/5.0
          nullable: true
        ip:
          type: string
          example: 58.111.106.198
          nullable: true
        medium:
          type: string
          example: survey
          nullable: true
        mediumId:
          type: string
          example: FglfHAn30PRwsZVyQlKp
          nullable: true
      required:
        - url
    #endregion Contacts

    #region Contact Appointments
    ContactAppointment:
      type: object
      x-FeatureName: contacts
      properties:
        id:
          type: string
          example: YS3jaqqeehkR2Is80miy
        calendarId:
          type: string
          example: YlWd2wuCAZQzh2cH1fVZ
        status:
          type: string
          example: booked
        title:
          type: string
          example: Test
        appoinmentStatus:
          type: string
          example: confirmed
        assignedUserId:
          type: string
          example: YlWd2wuCAZQzh2cH1fVZ
        notes:
          type: string
          example: test
        startTime:
          type: string
          example: '2021-07-16 11:00:00'
        endTime:
          type: string
          example: '2021-07-16 11:30:00'
    GetContactAppointmentsResponse:
      type: object
      x-FeatureName: contacts
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/ContactAppointment'
    #endregion Contact Appointments

    #region Contact Campaigns
    AddContactToCampaignInput:
      type: object
      x-FeatureName: contacts
      properties: {}
    UpdateContactCampaignResponse:
      type: object
      x-FeatureName: contacts
      properties:
        succeded:
          type: boolean
          example: true
    #endregion Contact Campaigns

    #region Contact Notes
    ContactNote:
      type: object
      x-FeatureName: contacts
      properties:
        id:
          type: string
          example: HGPcayliwcdoUFzvbTok
        body:
          type: string
          example: lorem ipsum
        userId:
          type: string
          example: TUcmRxWrjqzJS8EjkxNK
        dateAdded:
          type: string
          example: '2021-07-08T12:02:11.285Z'
        contactId:
          type: string
          example: TUcmRxWrjqzJS8EjkxNK
    ListContactNotesResponse:
      type: object
      x-FeatureName: contacts
      properties:
        notes:
          type: array
          items:
            $ref: '#/components/schemas/ContactNote'
    ContactNoteInput:
      type: object
      x-FeatureName: contacts
      properties:
        userId:
          type: string
          example: GCs5KuzPqTls7vWclkEV
        body:
          type: string
          example: lorem ipsum
      required:
        - body
    ContactNoteResponse:
      type: object
      x-FeatureName: contacts
      properties:
        note:
          $ref: '#/components/schemas/ContactNote'
    DeleteContactNoteResponse:
      type: object
      x-FeatureName: contacts
      properties:
        succeded:
          type: boolean
          example: true
    #endregion Contact Notes

    #region Contact Search
    #endregion Contact Search

    #region Contact Tags
    ContactTagsInput:
      type: object
      x-FeatureName: contacts
      properties:
        tags:
          example:
            - minim
            - velit magna
          type: array
          items:
            type: string
      required:
        - tags
    AddContactTagsResponse:
      type: object
      x-FeatureName: contacts
      properties:
        tags:
          example:
            - minim
            - velit magna
          type: array
          items:
            type: string
    RemoveContactTagsResponse:
      type: object
      x-FeatureName: contacts
      properties:
        tags:
          example:
            - minim
            - velit magna
          type: array
          items:
            type: string
    #endregion Contact Tags

    #region Contact Tasks
    ContactTaskResponse:
      type: object
      x-FeatureName: contacts
      properties:
        task:
          $ref: '#/components/schemas/ContactTask'
    ContactTask:
      type: object
      x-FeatureName: contacts
      properties:
        id:
          type: string
          example: lJpzYrWdpkC2hX6t2yue
        title:
          type: string
          example: test
        body:
          type: string
          example: testing
        assignedTo:
          type: string
          example: tesTUcmRxWrjqzJS8EjkxNKting
        dueDate:
          type: string
          example: '2021-07-08T02:30:00.000Z'
        completed:
          type: boolean
          example: true
        contactId:
          type: string
          example: lJpzYrWdpkC2hX6t2yue
    ListContactTasksResponse:
      type: object
      x-FeatureName: contacts
      properties:
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/ContactTask'
    CreateContactTaskInput:
      type: object
      x-FeatureName: contacts
      properties:
        title:
          type: string
          example: First Task
        body:
          type: string
          example: loram ipsum
        dueDate:
          type: string
          example: '2020-10-25T11:00:00Z'
        completed:
          type: boolean
          example: true
        assignedTo:
          type: string
          example: hxHGVRb1YJUscrCB8eXK
      required:
        - title
        - dueDate
        - completed
    UpdateContactTaskInput:
      type: object
      x-FeatureName: contacts
      properties:
        title:
          type: string
          example: First Task
        body:
          type: string
          example: loram ipsum
        dueDate:
          type: string
          example: '2020-10-25T11:00:00Z'
        completed:
          type: boolean
          example: true
        assignedTo:
          type: string
          example: hxHGVRb1YJUscrCB8eXK
    UpdateContactTaskStatusInput:
      type: object
      x-FeatureName: contacts
      properties:
        completed:
          type: boolean
          example: true
      required:
        - completed
    DeleteContactTaskResponse:
      type: object
      x-FeatureName: contacts
      properties:
        succeded:
          type: boolean
          example: true
    #endregion Contact Tasks

    #region Contact Workflows
    ContactWorkflowInput:
      type: object
      x-FeatureName: contacts
      properties:
        eventStartTime:
          type: string
          description: Event start time in ISO format
          example: '2021-06-23T03:30:00+01:00'
    ContactWorkflowResponse:
      type: object
      x-FeatureName: contacts
      properties:
        succeded:
          type: boolean
          example: true
    #endregion Contact Workflows

    #region Conversations
    StartAfterNumberSchema:
      type: object
      x-FeatureName: conversations
      properties:
        startAfterDate:
          type: number
          description: Search to begin after the specified date - should contain the sort value of the last document
          example: 1600854
    StartAfterArrayNumberSchema:
      type: object
      x-FeatureName: conversations
      properties:
        startAfterDate:
          description: Search to begin after the specified date - should contain the sort value of the last document
          example:
            - 1600854
            - 1600851
          type: array
          items:
            type: string
    ConversationSchema:
      type: object
      x-FeatureName: conversations
      properties:
        id:
          type: string
          description: Conversation Id
          example: ABCHkzuJQ8ZMd4Te84GK
        contactId:
          type: string
          description: Contact Id
          example: ABCHkzuJQ8ZMd4Te84GK
        locationId:
          type: string
          description: Location Id
          example: ABCHkzuJQ8ZMd4Te84GK
        lastMessageBody:
          type: string
          description: Last Message Body of the conversation
          example: This is a sample message body
        lastMessageType:
          type: string
          description: Last message type of the conversation
          example: TYPE_SMS
          enum:
            - TYPE_CALL
            - TYPE_SMS
            - TYPE_EMAIL
            - TYPE_SMS_REVIEW_REQUEST
            - TYPE_WEBCHAT
            - TYPE_SMS_NO_SHOW_REQUEST
            - TYPE_CAMPAIGN_SMS
            - TYPE_CAMPAIGN_CALL
            - TYPE_CAMPAIGN_EMAIL
            - TYPE_CAMPAIGN_VOICEMAIL
            - TYPE_FACEBOOK
            - TYPE_CAMPAIGN_FACEBOOK
            - TYPE_CAMPAIGN_MANUAL_CALL
            - TYPE_CAMPAIGN_MANUAL_SMS
            - TYPE_GMB
            - TYPE_CAMPAIGN_GMB
            - TYPE_REVIEW
            - TYPE_INSTAGRAM
            - TYPE_WHATSAPP
            - TYPE_CUSTOM_SMS
            - TYPE_CUSTOM_EMAIL
            - TYPE_CUSTOM_PROVIDER_SMS
            - TYPE_CUSTOM_PROVIDER_EMAIL
        type:
          type: string
          description: Type of the conversation
          example: TYPE_PHONE
          enum:
            - TYPE_PHONE
            - TYPE_EMAIL
            - TYPE_FB_MESSENGER
            - TYPE_REVIEW
        unreadCount:
          type: number
          description: Unread count of the messages in the conversation
          example: 1
        fullName:
          type: string
          description: Full name of the contact
          example: John Doe
        contactName:
          type: string
          description: Name of the contact in case the Full Name is missing, may contain the company name or the contact email
          example: John Doe Company
        email:
          type: string
          description: Email of the contact
          example: johndoe@mailingdomain.com
        phone:
          type: string
          description: Phone number of the contact
          example: '+15550001234'
      required:
        - id
        - contactId
        - locationId
        - lastMessageBody
        - lastMessageType
        - type
        - unreadCount
        - fullName
        - contactName
        - email
        - phone
    SearchConversationResponse:
      type: object
      x-FeatureName: conversations
      properties:
        conversations:
          description: The list of all conversations found for the given query
          type: array
          items:
            $ref: '#/components/schemas/ConversationSchema'
        total:
          type: number
          description: Total Number of results found for the given query
          example: 100
      required:
        - conversations
        - total
    CreateConversationInput:
      type: object
      x-FeatureName: conversations
      properties:
        locationId:
          type: string
          description: Location ID as string
          example: tDtDnQdgm2LXpyiqYvZ6
        contactId:
          type: string
          description: Contact ID as string
          example: tDtDnQdgm2LXpyiqYvZ6
      required:
        - locationId
        - contactId
    ConversationLastMessageType:
      type: string
      x-FeatureName: conversations
      description: Type of the last message sent/receieved in the conversation.
      x-enumNames:
        - CALL
        - SMS
        - EMAIL
        - SMS_REVIEW_REQUEST
        - WEBCHAT
        - SMS_NO_SHOW_REQUEST
        - CAMPAIGN_SMS
        - CAMPAIGN_CALL
        - CAMPAIGN_EMAIL
        - CAMPAIGN_VOICEMAIL
        - FACEBOOK
        - CAMPAIGN_FACEBOOK
        - CAMPAIGN_MANUAL_CALL
        - CAMPAIGN_MANUAL_SMS
        - GMB
        - CAMPAIGN_GMB
        - REVIEW
        - INSTAGRAM
        - WHATSAPP
        - CUSTOM_SMS
        - CUSTOM_EMAIL
        - CUSTOM_PROVIDER_SMS
        - CUSTOM_PROVIDER_EMAIL
      enum:
        - TYPE_CALL
        - TYPE_SMS
        - TYPE_EMAIL
        - TYPE_SMS_REVIEW_REQUEST
        - TYPE_WEBCHAT
        - TYPE_SMS_NO_SHOW_REQUEST
        - TYPE_CAMPAIGN_SMS
        - TYPE_CAMPAIGN_CALL
        - TYPE_CAMPAIGN_EMAIL
        - TYPE_CAMPAIGN_VOICEMAIL
        - TYPE_FACEBOOK
        - TYPE_CAMPAIGN_FACEBOOK
        - TYPE_CAMPAIGN_MANUAL_CALL
        - TYPE_CAMPAIGN_MANUAL_SMS
        - TYPE_GMB
        - TYPE_CAMPAIGN_GMB
        - TYPE_REVIEW
        - TYPE_INSTAGRAM
        - TYPE_WHATSAPP
        - TYPE_CUSTOM_SMS
        - TYPE_CUSTOM_EMAIL
        - TYPE_CUSTOM_PROVIDER_SMS
        - TYPE_CUSTOM_PROVIDER_EMAIL
    Conversation:
      type: object
      x-FeatureName: conversations
      properties:
        locationId:
          type: string
          description: Location ID as string
          example: tDtDnQdgm2LXpyiqYvZ6
        contactId:
          type: string
          description: Contact ID as string
          example: tDtDnQdgm2LXpyiqYvZ6
        assignedTo:
          type: string
          description: Assigned User ID as string
          example: tDtDnQdgm2LXpyiqYvZ6
        userId:
          type: string
          description: User ID as string
          example: tDtDnQdgm2LXpyiqYvZ6
        lastMessageBody:
          type: string
          description: Last message body as string
          example: Hello, this is the message body
        lastMessageDate:
          type: string
          description: Last message date as UTC
          example: '1628008053263'
        lastMessageType:
          $ref: '#/components/schemas/ConversationLastMessageType'
        unreadCount:
          type: number
          description: Count of unread messages in the conversation
          example: 1
        inbox:
          type: boolean
          description: Inbox status of the conversation.
          example: true
        starred:
          type: boolean
          description: Starred status of the conversation.
          example: true
        deleted:
          type: boolean
          description: Deleted status of the conversation.
          example: false
      required:
        - locationId
        - contactId
        - deleted
    ConversationResponse:
      type: object
      x-FeatureName: conversations
      properties:
        success:
          type: boolean
          description: Boolean value as the API response.
          example: true
        conversation:
          description: Conversation data of the provided conversation ID.
          $ref: '#/components/schemas/Conversation'
      required:
        - success
        - conversation
    UpdateConversationInput:
      type: object
      x-FeatureName: conversations
      properties:
        locationId:
          type: string
          description: Location ID as string
          example: tDtDnQdgm2LXpyiqYvZ6
        unreadCount:
          type: number
          description: Count of unread messages in the conversation
          example: 1
        starred:
          type: boolean
          description: Starred status of the conversation.
          example: true
      required:
        - locationId
    DeleteConversationResponse:
      type: object
      x-FeatureName: conversations
      properties:
        success:
          type: boolean
          description: Boolean value as the API response.
          example: true
      required:
        - success
    CancelScheduledMessageResponse:
      type: object
      x-FeatureName: conversations
      properties:
        status:
          type: number
          description: HTTP Status code of the request
          example: 404
        message:
          type: string
          description: Error message of the request
          example: Failed cancel the scheduled message
      required:
        - status
        - message
    MessageType:
      type: string
      x-FeatureName: conversations
      x-EnumNames:
        - SMS
        - EMAIL
        - WHATSAPP
        - GMB
        - IG
        - FB
        - CUSTOM
        - WEBCHAT
      enum:
        - SMS
        - Email
        - WhatsApp
        - GMB
        - IG
        - FB
        - Custom
        - WebChat
    SendMessageInput:
      type: object
      x-FeatureName: conversations
      properties:
        contactId:
          type: string
        appointmentId:
          type: string
        type:
          $ref: '#/components/schemas/MessageType'
        attachments:
          type: array
          items:
            type: string
        emailFrom:
          type: string
        emailCc:
          type: array
          items:
            type: string
        emailBcc:
          type: array
          items:
            type: string
        html:
          type: string
        message:
          type: string
        subject:
          type: string
        templateId:
          type: string
        scheduledTimestamp:
          type: number
          description: UTC Timestamp (in seconds) at which the message should be scheduled
          example: 1669287863
        conversationProviderId:
          type: string
        emailTo:
          type: string
      required:
        - type
        - contactId
    SendMessageResponse:
      type: object
      x-FeatureName: conversations
      properties:
        conversationId:
          type: string
          description: Conversation ID.
          example: ABC12h2F6uBrIkfXYazb
        emailMessageId:
          type: string
          description: This contains the email message id (only for Email type). Use this ID to send inbound replies to GHL to create a threaded email.
          example: rnGyqh2F6uBrIkfhFo9A
        messageId:
          type: string
          description: This is the main Message ID
          example: t22c6DQcTDf3MjRhwf77
        messageIds:
          description: When sending via the GMB channel, we will be returning list of `messageIds` instead of single `messageId`.
          type: array
          items:
            type: string
        msg:
          type: string
          description: Additional response message when sending a workflow message
          example: Message queued successfully.
      required:
        - conversationId
        - messageId
    AddInboundMessageInput:
      type: object
      x-FeatureName: conversations
      properties:
        type:
          $ref: '#/components/schemas/MessageType'
        attachments:
          description: Array of attachments
          type: array
          items:
            type: string
        message:
          type: string
          description: Message Body
        conversationId:
          type: string
          description: Conversation Id
          example: ve9EPM428h8vShlRW1KT
        conversationProviderId:
          type: string
          description: Conversation Provider Id
          example: 61d6d1f9cdac7612faf80753
        html:
          type: string
          description: HTML Body of Email
        subject:
          type: string
          description: Subject of the Email
        emailFrom:
          type: string
          description: From Email Address
        emailTo:
          type: string
          description: To Email Address
        emailCc:
          description: List of email address to CC
          example:
            - john1@doe.com
            - john2@doe.com
          type: array
          items:
            type: string
        emailBcc:
          description: List of email address to BCC
          example:
            - john1@doe.com
            - john2@doe.com
          type: array
          items:
            type: string
        emailMessageId:
          type: string
          description: Send the email message id for which this email should be threaded. This is for replying to a specific email
        direction:
          type: object
          description: |
            Message direction, if required can be set manually. Defaults to 
            `outbound`
          default: outbound
          enum:
            - inbound
            - outbound
        date:
          type: string
          format: date-time
          description: Date of the inbound message
      required:
        - type
        - conversationId
        - conversationProviderId
    ProcessMessageResponseDto:
      type: object
      x-FeatureName: conversations
      properties:
        success:
          type: boolean
        conversationId:
          type: string
          description: Conversation ID.
          example: ABC12h2F6uBrIkfXYazb
        messageId:
          type: string
          description: This is the main Message ID
          example: t22c6DQcTDf3MjRhwf77
        message:
          type: string
      required:
        - success
        - conversationId
        - messageId
        - message
    UploadMessageAttachmentInput:
      type: object
      x-FeatureName: conversations
      properties:
        conversationId:
          type: string
          description: Conversation Id
          example: ve9EPM428h8vShlRW1KT
        locationId:
          type: string
        attachmentUrls:
          type: array
          items:
            type: string
      required:
        - conversationId
        - locationId
        - attachmentUrls
    UploadMessageAttachmentResponse:
      type: object
      x-FeatureName: conversations
      properties:
        uploadedFiles:
          type: object
      required:
        - uploadedFiles
    UploadFilesErrorResponseDto:
      type: object
      x-FeatureName: conversations
      properties:
        status:
          type: number
          description: HTTP Status code of the request
          example: 413
          enum:
            - 400
            - 413
            - 415
        message:
          type: string
          description: Error message of the request
          example: Failed to upload the files
      required:
        - status
        - message
    UpdateMessageStatusError:
      type: object
      x-FeatureName: conversations
      properties:
        code:
          type: string
          description: Error Code
          example: '1'
        type:
          type: string
          description: Error Type
          example: saas
        message:
          type: string
          description: Error Message
          example: There was an error from the provider
      required:
        - code
        - type
        - message
    UpdateMessageStatusInput:
      type: object
      x-FeatureName: conversations
      properties:
        status:
          type: string
          description: Message status
          example: read
          enum:
            - read
            - pending
            - delivered
            - failed
        error:
          description: Error object from the conversation provider
          $ref: '#/components/schemas/UpdateMessageStatusError'
        emailMessageId:
          type: string
          description: Email message Id
          example: ve9EPM428h8vShlRW1KT
        recipients:
          description: Email delivery status for additional email recipients.
          type: array
          items:
            type: string
      required:
        - status
    #endregion Conversations

    #region Custom Fields
    CustomFieldArrayInput:
      type: object
      x-FeatureName: custom-fields
      properties:
        id:
          type: string
          example: 6dvNaf7VhkQ9snc5vnjJ
        key:
          type: string
          example: my_custom_field
        field_value:
          type: array
          items:
            type: string
      required:
        - id
    CustomFieldObjectInput:
      type: object
      x-FeatureName: custom-fields
      properties:
        id:
          type: string
          example: 6dvNaf7VhkQ9snc5vnjJ
        key:
          type: string
          example: my_custom_field
        field_value:
          type: object
          example: {}
      required:
        - id
    CustomFieldStringInput:
      type: object
      x-FeatureName: custom-fields
      properties:
        id:
          type: string
          example: 6dvNaf7VhkQ9snc5vnjJ
          description: Pass either `id` or `key` of custom field
        key:
          type: string
          example: my_custom_field
          description: Pass either `id` or `key` of custom field
        field_value:
          type: string
          example: '9039160788'
    CustomField:
      type: object
      x-FeatureName: locations
      properties:
        id:
          type: string
          example: 3sv6UEo51C9Bmpo1cKTq
        name:
          type: string
          example: pincode
        fieldKey:
          type: string
          example: contact.pincode
        placeholder:
          type: string
          example: Pin code
        dataType:
          type: string
          example: TEXT
        position:
          type: number
          example: 0
        picklistOptions:
          example:
            - first option
          type: array
          items:
            type: string
        picklistImageOptions:
          example: []
          type: array
          items:
            type: string
        isAllowedCustomOption:
          type: boolean
          example: false
        isMultiFileAllowed:
          type: boolean
          example: true
        maxFileLimit:
          type: number
          example: 4
        locationId:
          type: string
          example: 3sv6UEo51C9Bmpo1cKTq
        model:
          type: string
          description: Model of the custom field
          example: opportunity
          enum:
            - contact
            - opportunity
    ListCustomFieldsResponse:
      type: object
      x-FeatureName: locations
      properties:
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
    CustomFieldResponse:
      type: object
      x-FeatureName: locations
      properties:
        customField:
          $ref: '#/components/schemas/CustomField'
    CustomFieldTextBoxListOptions:
      type: object
      x-FeatureName: locations
      properties:
        label:
          type: string
          example: First
        prefillValue:
          type: string
          example: ''
    CreateCustomFieldInput:
      type: object
      x-FeatureName: locations
      properties:
        name:
          type: string
          example: Custom Field
        dataType:
          type: string
          example: TEXT
        placeholder:
          type: string
          example: Placeholder Text
        acceptedFormat:
          example:
            - .pdf
            - .docx
            - .jpeg
          type: array
          items:
            type: string
        isMultipleFile:
          type: boolean
          example: false
        maxNumberOfFiles:
          type: number
          example: 2
        textBoxListOptions:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldTextBoxListOptions'
        position:
          type: number
          example: 0
          default: 0
        model:
          type: string
          description: Model of the custom field you want to create
          example: opportunity
          enum:
            - contact
            - opportunity
      required:
        - name
        - dataType
    UpdateCustomFieldInput:
      type: object
      x-FeatureName: locations
      properties:
        name:
          type: string
          example: Custom Field
        placeholder:
          type: string
          example: Placeholder Text
        acceptedFormat:
          example:
            - .pdf
            - .docx
            - .jpeg
          type: array
          items:
            type: string
        isMultipleFile:
          type: boolean
          example: false
        maxNumberOfFiles:
          type: number
          example: 2
        textBoxListOptions:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldTextBoxListOptions'
        position:
          type: number
          example: 0
          default: 0
        model:
          type: string
          description: Model of the custom field you want to update
          example: opportunity
          enum:
            - contact
            - opportunity
      required:
        - name
    DeleteCustomFieldResponse:
      type: object
      x-FeatureName: locations
      properties:
        succeded:
          type: boolean
          example: true
    OpportunityCustomField:
      type: object
      x-FeatureName: opportunities
      properties:
        id:
          type: string
          example: MgobCB14YMVKuE4Ka8p1
        fieldValue:
          description: The value of the custom field
          oneOf:
            - type: string
            - type: object
            - type: array
              items:
                type: string
            - type: array
              items:
                type: object
      required:
        - id
        - fieldValue
    #endregion Custom Fields

    #region Custom Values
    CustomValue:
      type: object
      x-FeatureName: custom-values
      properties:
        id:
          type: string
          example: rWQ709Pb62syqGLceg1x
        name:
          type: string
          example: Custom Field
        fieldKey:
          type: string
          example: '{{ custom_values.custom_field }}'
        value:
          type: string
          example: Value
        locationId:
          type: string
          example: rWQ709Pb6dasyqGLceg1x
    ListCustomValuesResponse:
      type: object
      x-FeatureName: custom-values
      properties:
        customValues:
          type: array
          items:
            $ref: '#/components/schemas/CustomValue'
    CustomValueResponse:
      type: object
      x-FeatureName: custom-values
      properties:
        customValue:
          $ref: '#/components/schemas/CustomValue'
    CustomValueInput:
      type: object
      x-FeatureName: custom-values
      properties:
        name:
          type: string
          example: Custom Field Name
        value:
          type: string
          example: Value
      required:
        - name
        - value
    DeleteCustomValueResponse:
      type: object
      x-FeatureName: custom-values
      properties:
        succeded:
          type: boolean
          example: true
    #endregion Custom Values

    #region Forms
    FormSurveySubmissionOthers:
      type: object
      x-FeatureName: forms
      properties:
        __submissions_other_field__:
          type: string
          example: john@deo.com
        __custom_field_id__:
          type: string
          example: '20'
        eventData:
          $ref: '#/components/schemas/AttributionEvent'
    FormsSubmission:
      type: object
      x-FeatureName: forms
      properties:
        id:
          type: string
          example: 38303ec7-629a-49e2-888a-cf8bf0b1f97e
        contactId:
          type: string
          example: DWQ45t2IPVxi9LDu1wBl
        createdAt:
          type: string
          example: '2021-06-23T06:07:04.000Z'
        formId:
          type: string
          example: YSWdvS4Is98wtIDGnpmI
        name:
          type: string
          example: test
        email:
          type: string
          example: test@test.com
        others:
          $ref: '#/components/schemas/FormSurveySubmissionOthers'
    ListFormsSubmissionsResponse:
      type: object
      x-FeatureName: forms
      properties:
        submissions:
          type: array
          items:
            $ref: '#/components/schemas/FormsSubmission'
        meta:
          $ref: '#/components/schemas/PaginationMeta'
    FormsParams:
      type: object
      x-FeatureName:
      properties:
        id:
          type: string
          example: YSWdvS4Is98wtIDGnpmI
        name:
          type: string
          example: Form 1
        locationId:
          type: string
          example: ve9EPM428h8vShlRW1KT
    ListFormsResponse:
      type: object
      x-FeatureName: forms
      properties:
        forms:
          type: array
          items:
            $ref: '#/components/schemas/FormsParams'
        total:
          type: number
          example: '20'
          description: Total number of forms
    #endregion Forms

    #region Locations
    UpdateLocationInput:
      type: object
      x-FeatureName: locations
      properties:
        name:
          type: string
          description: The name for the sub-account/location
        phone:
          type: string
          description: |
            The phone number of the business for which sub-account is created in
            international (IEEE E.164) format
        companyId:
          type: string
          description: Company/Agency Id
        address:
          type: string
          description: The address of the business for which sub-account is created
        city:
          type: string
          description: The city where the business is located for which sub-account is created
        state:
          type: string
          description: The state in which the business operates for which sub-account is created
        country:
          description: |
            The 2-letter ISO country code of the country in which the business is present
          $ref: '#/components/schemas/CountryCode'
        postalCode:
          type: string
          example: '567654'
          description: The postal code of the business for which sub-account is created
        website:
          type: string
          example: https://yourwebsite.com
          description: The website of the business for which sub-account is created
        timezone:
          type: string
          example: US/Central
          description: The timezone of the business for which sub-account is created
        prospectInfo:
          $ref: '#/components/schemas/LocationProspectInfo'
          example:
            firstName: John
            lastName: Doe
            email: john.doe@mail.com
        settings:
          description: The default settings for location
          $ref: '#/components/schemas/LocationSettings'
        social:
          description: The social media links for location
          $ref: '#/components/schemas/LocationSocialMediaInfo'
        twilio:
          description: The twilio credentials for location
          $ref: '#/components/schemas/LocationTwilioSettings'
        mailgun:
          description: The mailgun credentials for location
          $ref: '#/components/schemas/LocationMailgunSettings'
        snapshot:
          description: The snapshot to be updated in the location.
          $ref: '#/components/schemas/LocationSnapshotInput'
      required:
        - companyId
    LocationSettings:
      type: object
      x-FeatureName: locations
      properties:
        allowDuplicateContact:
          type: boolean
          example: false
        allowDuplicateOpportunity:
          type: boolean
          example: false
        allowFacebookNameMerge:
          type: boolean
          example: false
        disableContactTimezone:
          type: boolean
          example: false
    LocationSocialMediaInfo:
      type: object
      x-FeatureName: locations
      properties:
        facebookUrl:
          type: string
          description: Facebook URL
          example: https://www.facebook.com/
        googlePlus:
          type: string
          description: Googleplus URL
          example: https://www.googleplus.com/
        linkedIn:
          type: string
          description: LinkedIn URL
          example: https://www.linkedIn.com/
        foursquare:
          type: string
          description: Foursquare URL
          example: https://www.foursquare.com/
        twitter:
          type: string
          description: Twitter URL
          example: https://www.foutwitterrsquare.com/
        yelp:
          type: string
          description: Yelp URL
          example: https://www.yelp.com/
        instagram:
          type: string
          description: Instagram URL
          example: https://www.instagram.com/
        youtube:
          type: string
          description: Instagram URL
          example: https://www.youtube.com/
        pinterest:
          type: string
          description: Instagram URL
          example: https://www.pinterest.com/
        blogRss:
          type: string
          description: Instagram URL
          example: https://www.blogRss.com/
        googlePlacesId:
          type: string
          description: Google Business Places ID
          example: ChIJJGPdVbQTrjsRGUkefteUeFk
    Location:
      type: object
      x-FeatureName: locations
      properties:
        id:
          type: string
          description: Location Id
          example: ve9EPM428h8vShlRW1KT
        name:
          type: string
          example: Mark Shoes
          description: The name for the sub-account/location
        phone:
          type: string
          example: '+1410039940'
          description: The phone number of the business for which sub-account is created
        email:
          type: string
          example: john.doe@mail.com
          description: The email for the sub-account/location
        address:
          type: string
          example: 4th fleet street
          description: The address of the business for which sub-account is created
        city:
          type: string
          example: New York
          description: The city where the business is located for which sub-account is created
        state:
          type: string
          example: Illinois
          description: The state in which the business operates for which sub-account is created
        country:
          type: string
          example: US
          description: The country in which the business is present for which sub-account is created
        postalCode:
          type: string
          example: '567654'
          description: The postal code of the business for which sub-account is created
        website:
          type: string
          example: https://yourwebsite.com
          description: The website of the business for which sub-account is created
        timezone:
          type: string
          example: US/Central
          description: The timezone of the business for which sub-account is created
        settings:
          description: The default settings for location
          $ref: '#/components/schemas/LocationSettings'
        social:
          description: The social media links for location
          $ref: '#/components/schemas/LocationSocialMediaInfo'
    SearchLocationsResponse:
      type: object
      x-FeatureName: locations
      properties:
        locations:
          type: array
          items:
            $ref: '#/components/schemas/Location'
    LocationBusinessInfo:
      type: object
      x-FeatureName: locations
      properties:
        name:
          type: string
          example: dentist
        address:
          type: string
          example: MIG 14, Delhi
        city:
          type: string
          example: delhi
        state:
          type: string
          example: delhi
        country:
          type: string
          example: IN
        postalCode:
          type: string
          example: '567654'
        website:
          type: string
          example: https://gohighlevel.com/
        timezone:
          type: string
          example: America/Chicago
        logoUrl:
          type: string
          example: https://dummyimage.com/o/locationPhotos%2Fve9EPM428h8vShlRW1KT.jpeg
    GetLocationResponseData:
      type: object
      x-FeatureName: locations
      properties:
        id:
          type: string
          example: ve9EPM428h8vShlRW1KT
        companyId:
          type: string
          example: 5DP4iH6HLkQsiKESj6rh
        name:
          type: string
          example: dentist
        address:
          type: string
          example: ganthi nagar, gyanbabu chauk motihati
        city:
          type: string
          example: motihari
        state:
          type: string
          example: Loca
        logoUrl:
          type: string
          example: https://dummyimage.com/o/locationPhotos%2Fve9EPM428h8vShlRW1KT.jpeg
        country:
          type: string
          example: IN
        postalCode:
          type: string
          example: '567654'
        website:
          type: string
          example: https://gohighlevel.com/
        timezone:
          type: string
          example: America/Chicago
        firstName:
          type: string
          example: Dr. Rane
        lastName:
          type: string
          example: deo
        email:
          type: string
          example: rane@due.com
        phone:
          type: string
          example: '+919039160788'
        business:
          $ref: '#/components/schemas/LocationBusinessInfo'
        social:
          $ref: '#/components/schemas/LocationSocialMediaInfo'
        settings:
          $ref: '#/components/schemas/LocationSettings'
        reseller:
          type: object
    GetLocationResponse:
      type: object
      x-FeatureName: locations
      properties:
        location:
          $ref: '#/components/schemas/GetLocationResponseData'
    LocationProspectInfo:
      type: object
      x-FeatureName: locations
      properties:
        firstName:
          type: string
          description: First name of the prospect
          example: John
        lastName:
          type: string
          description: Last name of the prospect
          example: Doe
        email:
          type: string
          description: Email of the prospect
          example: john.doe@mail.com
      required:
        - firstName
        - lastName
        - email
    LocationTwilioSettings:
      type: object
      x-FeatureName: locations
      properties:
        sid:
          type: string
          description: SID provided by Twilio
          example: AC_XXXXXXXXXXX
        authToken:
          type: string
          description: Auth token provided by Twilio
          example: 77_XXXXXXXXXXX
      required:
        - sid
        - authToken
    LocationMailgunSettings:
      type: object
      x-FeatureName: locations
      properties:
        apiKey:
          type: string
          description: API key provided by Mailgun
          example: key-XXXXXXXXXXX
        domain:
          type: string
          description: Domain connected with Mailgun
          example: replies.yourdomain.com
      required:
        - apiKey
        - domain
    CreateLocationInput:
      type: object
      x-FeatureName: locations
      properties:
        name:
          type: string
          example: Mark Shoes
          description: The name for the sub-account/location
        phone:
          type: string
          example: '+1410039940'
          description: The phone number of the business for which sub-account is created with the appropriate country-code
        companyId:
          type: string
          description: Company/Agency Id
          example: UAXssdawIWAWD
        address:
          type: string
          example: 4th fleet street
          description: The address of the business for which sub-account is created
        city:
          type: string
          example: New York
          description: The city where the business is located for which sub-account is created
        state:
          type: string
          example: Illinois
          description: The state in which the business operates for which sub-account is created
        country:
          description: The 2 letter country-code in which the business is present for which sub-account is created
          $ref: '#/components/schemas/CountryCode'
        postalCode:
          type: string
          example: '567654'
          description: The postal code of the business for which sub-account is created
        website:
          type: string
          example: https://yourwebsite.com
          description: The website of the business for which sub-account is created
        timezone:
          type: string
          example: US/Central
          description: The timezone of the business for which sub-account is created
        prospectInfo:
          $ref: '#/components/schemas/LocationProspectInfo'
          example:
            firstName: John
            lastName: Doe
            email: john.doe@mail.com
        settings:
          description: The default settings for location
          $ref: '#/components/schemas/LocationSettings'
        social:
          description: The social media links for location
          $ref: '#/components/schemas/LocationSocialMediaInfo'
        twilio:
          description: The twilio credentials for location
          $ref: '#/components/schemas/LocationTwilioSettings'
        mailgun:
          description: The mailgun credentials for location
          $ref: '#/components/schemas/LocationMailgunSettings'
        snapshotId:
          type: string
          description: The snapshot ID to be loaded into the location.
          example: XXXXXXXXXXX
      required:
        - name
        - companyId
    CreateLocationResponse:
      type: object
      x-FeatureName: locations
      properties:
        id:
          type: string
          description: Location Id
          example: ve9EPM428h8vShlRW1KT
        companyId:
          type: string
          description: Company/Agency Id
          example: UAXssdawIWAWD
        name:
          type: string
          description: The name for the sub-account/location
          example: Mark Shoes
        phone:
          type: string
          description: The phone number of the business for which sub-account is created
          example: '+1410039940'
        email:
          type: string
          description: The email for the sub-account/location
          example: john.doe@mail.com
        address:
          type: string
          description: The address of the business for which sub-account is created
          example: 4th fleet street
        city:
          type: string
          description: The city or locality where the business is located for which sub-account is created
          example: New York
        state:
          type: string
          description: The state or province in which the business operates for which sub-account is created
          example: Illinois
        country:
          description: The country in which the business is present for which sub-account is created
          $ref: '#/components/schemas/CountryCode'
        postalCode:
          type: string
          description: The postal code of the business for which sub-account is created
          example: '567654'
        website:
          type: string
          description: The website of the business for which sub-account is created
          example: https://yourwebsite.com
        timezone:
          type: string
          description: The timezone of the business for which sub-account is created
          example: US/Central
        settings:
          description: The default settings for location
          $ref: '#/components/schemas/LocationSettings'
        social:
          description: The social media links for location
          $ref: '#/components/schemas/LocationSocialMediaInfo'
    LocationSnapshotInput:
      type: object
      x-FeatureName: locations
      properties:
        id:
          type: string
          description: Snaptshot ID
          example: XXXXXXXXXXX
        override:
          type: boolean
          description: If you want override all conflicted assets then pass true. Default value is false.
          example: false
          default: false
      required:
        - id
    DeleteLocationResponse:
      type: object
      x-FeatureName: locations
      properties:
        success:
          type: boolean
          description: Success status of the API
          example: true
        message:
          type: string
          description: Success message of the API
          example: 'Deleted location with id: ve9EPM428h8vShlRW1KT'
      required:
        - success
        - message
    LocationTag:
      type: object
      x-FeatureName: locations
      properties:
        id:
          type: string
          example: flGwEuzsfJOia1i1ikRN
        name:
          type: string
          example: minim aliquip anim
        locationId:
          type: string
          example: ve9EPM428h8vShlRW1KT
    ListLocationTagsResponse:
      type: object
      x-FeatureName: locations
      properties:
        tags:
          type: array
          items:
            $ref: '#/components/schemas/LocationTag'
    LocationTagResponse:
      type: object
      x-FeatureName: locations
      properties:
        tag:
          $ref: '#/components/schemas/LocationTag'
    LocationTagInput:
      type: object
      x-FeatureName: locations
      properties:
        name:
          type: string
          description: Tag name
          example: Tag
      required:
        - name
    DeleteLocationTagResponse:
      type: object
      x-FeatureName: locations
      properties:
        succeded:
          type: boolean
          example: true
    SearchLocationTasksInput:
      type: object
      x-FeatureName: locations
      properties:
        contactId:
          description: Contact Ids
          example:
            - dSMo5jnqkJyh8YeGXM7k
            - j5WESpmRj816VtyUuWwh
          type: array
          items:
            type: string
        completed:
          type: boolean
          description: Task Completed Or Pending
          example: true
        assignedTo:
          description: Assigned User Ids
          example:
            - 0004Mtfsd11SBU1mBPgd
          type: array
          items:
            type: string
        query:
          type: string
          description: Search Value
          example: Task Name
        limit:
          type: number
          description: Limit To Api
          example: 10
          default: 25
        skip:
          type: number
          description: Number Of Tasks To Skip
          default: 0
          example: 10
        businessId:
          type: string
          description: Bussiness Id
          example: 6348240b98722079e5417332
    SearchLocationTasksResponse:
      type: object
      x-FeatureName: locations
      properties:
        tasks:
          type: array
          items:
            type: object
            additionalProperties: true
    #endregion Locations

    #region Media
    ListMediaItemsResponse:
      type: object
      x-FeatureName: media
      properties:
        files:
          description: Array of File Objects
          example:
            altId: locationId
            altType: location
            name: file name
            parentId: parent folder id
            url: file url
            path: file path
          type: array
          items:
            type: string
      required:
        - files
    UploadMediaFileResponse:
      type: object
      x-FeatureName: media
      properties:
        fileId:
          type: string
          description: ID of the uploaded file
          example: file.pdf
      required:
        - fileId
    #endregion Media

    #region Opportunities
    SearchOpportunitiesContactResponseSchema:
      type: object
      x-FeatureName: opportunities
      properties:
        id:
          type: string
          example: byMEV0NQinDhq8ZfiOi2
        name:
          type: string
          example: John Deo
        companyName:
          type: string
          example: Tesla Inc
        email:
          type: string
          example: john@deo.com
        phone:
          type: string
          example: +1202-555-0107
        tags:
          type: array
          items:
            type: string
    Opportunity:
      type: object
      x-FeatureName: opportunities
      properties:
        id:
          type: string
          example: yWQobCRIhRguQtD2llvk
        name:
          type: string
          example: testing
        monetaryValue:
          type: number
          example: 500
        pipelineId:
          type: string
          example: VDm7RPYC2GLUvdpKmBfC
        pipelineStageId:
          type: string
          example: e93ba61a-53b3-45e7-985a-c7732dbcdb69
        assignedTo:
          type: string
          example: zT46WSCPbudrq4zhWMk6
        status:
          type: string
          example: open
        source:
          type: string
          example: ''
        lastStatusChangeAt:
          type: string
          example: '2021-08-03T04:55:17.355Z'
        lastStageChangeAt:
          type: string
          example: '2021-08-03T04:55:17.355Z'
        lastActionDate:
          type: string
          example: '2021-08-03T04:55:17.355Z'
        indexVersion:
          type: string
          example: 1
        createdAt:
          type: string
          example: '2021-08-03T04:55:17.355Z'
        updatedAt:
          type: string
          example: '2021-08-03T04:55:17.355Z'
        contactId:
          type: string
          example: zT46WSCPbudrq4zhWMk6
        locationId:
          type: string
          example: zT46WSCPbudrq4zhW
        contact:
          $ref: '#/components/schemas/SearchOpportunitiesContactResponseSchema'
        notes:
          type: array
          items:
            type: string
        tasks:
          type: array
          items:
            type: string
        calendarEvents:
          type: array
          items:
            type: string
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/OpportunityCustomField'
    SearchMetaResponseSchema:
      type: object
      x-FeatureName: opportunities
      properties:
        total:
          type: number
          example: 1
        nextPageUrl:
          type: string
          example: http://localhost:5066/opportunities/search?q=&location_id=ve9EPM428h8vShlRW1KT&pipeline_id=&pipeline_stage_id=&status=&assigned_to+=&campaignId=&id=&order=&endDate=&startAfter=1625203104328&startAfterId=yWQobCRIhRguQtD2llvk&date=&limit=1&country=&page=1
        startAfterId:
          type: string
          example: yWQobCRIhRguQtD2llvk
        startAfter:
          type: number
          example: 1625203104328
        currentPage:
          type: number
          example: 2
        nextPage:
          type: number
          example: 3
        prevPage:
          type: number
          example: 1
    SearchOpportunitiesResponse:
      type: object
      x-FeatureName: opportunities
      properties:
        opportunities:
          type: array
          items:
            $ref: '#/components/schemas/Opportunity'
        meta:
          $ref: '#/components/schemas/SearchMetaResponseSchema'
        aggregations:
          type: object
    PipelinesResponseSchema:
      type: object
      x-FeatureName: opportunities
      properties:
        id:
          type: string
          example: aWdODOBVOlH1RUFKWQke
        name:
          type: string
          example: new pipeline
        stages:
          type: array
          items:
            type: object
            additionalProperties: true
        showInFunnel:
          type: boolean
          example: false
        showInPieChart:
          type: boolean
          example: true
        locationId:
          type: string
          example: dsjddjkndadqaja
    ListPipelinesResponse:
      type: object
      x-FeatureName: opportunities
      properties:
        pipelines:
          type: array
          items:
            $ref: '#/components/schemas/PipelinesResponseSchema'
    OpportunityResponse:
      type: object
      x-FeatureName: opportunities
      properties:
        opportunity:
          $ref: '#/components/schemas/Opportunity'
    DeleteOpportunityResponse:
      type: object
      x-FeatureName: opportunities
      properties:
        succeded:
          type: boolean
          example: true
    UpdateOpportunityStatusResponse:
      type: object
      x-FeatureName: opportunities
      properties:
        succeded:
          type: boolean
          example: true
    UpdateOpportunityStatusInput:
      type: object
      x-FeatureName: opportunities
      properties:
        status:
          type: string
          enum:
            - open
            - won
            - lost
            - abandoned
            - all
      required:
        - status
    CreateOpportunityInput:
      type: object
      x-FeatureName: opportunities
      properties:
        pipelineId:
          type: string
          description: pipeline Id
          example: VDm7RPYC2GLUvdpKmBfC
        locationId:
          type: string
          example: ve9EPM428h8vShlRW1KT
        name:
          type: string
          example: First Opps
        pipelineStageId:
          type: string
          example: 7915dedc-8f18-44d5-8bc3-77c04e994a10
        status:
          type: string
          enum:
            - open
            - won
            - lost
            - abandoned
            - all
        contactId:
          type: string
          example: mTkSCb1UBjb5tk4OvB69
        monetaryValue:
          type: number
          example: 220
        assignedTo:
          type: string
          example: 082goXVW3lIExEQPOnd3
        customFields:
          type: array
          description: Add custom fields to opportunities.
          items:
            anyOf:
              - $ref: '#/components/schemas/CustomFieldStringInput'
              - $ref: '#/components/schemas/CustomFieldArrayInput'
              - $ref: '#/components/schemas/CustomFieldObjectInput'
      required:
        - pipelineId
        - locationId
        - name
        - status
        - contactId
    UpdateOpportunityInput:
      type: object
      x-FeatureName: opportunities
      properties:
        pipelineId:
          type: string
          description: pipeline Id
          example: bCkKGpDsyPP4peuKowkG
        name:
          type: string
          example: First Opps
        pipelineStageId:
          type: string
          example: 7915dedc-8f18-44d5-8bc3-77c04e994a10
        status:
          type: string
          enum:
            - open
            - won
            - lost
            - abandoned
            - all
        monetaryValue:
          type: number
          example: 220
        assignedTo:
          type: string
          example: 082goXVW3lIExEQPOnd3
        customFields:
          type: array
          description: Update custom fields to opportunities.
          items:
            anyOf:
              - $ref: '#/components/schemas/CustomFieldStringInput'
              - $ref: '#/components/schemas/CustomFieldArrayInput'
              - $ref: '#/components/schemas/CustomFieldObjectInput'
    UpsertOpportunityInput:
      type: object
      x-FeatureName: opportunities
      properties:
        pipelineId:
          type: string
          description: pipeline Id
          example: bCkKGpDsyPP4peuKowkG
        locationId:
          type: string
          description: locationId
          example: CLu7BaljjqrEjBGKTNNe
        contactId:
          type: string
          description: contactId
          example: LiKJ2vnRg5ETM8Z19K7
        name:
          type: string
          description: name
          example: opportunity name
        status:
          type: string
          enum:
            - open
            - won
            - lost
            - abandoned
            - all
        pipelineStageId:
          type: string
          example: 7915dedc-8f18-44d5-8bc3-77c04e994a10
        monetaryValue:
          type: number
          example: 220
        assignedTo:
          type: string
          example: 082goXVW3lIExEQPOnd3
      required:
        - pipelineId
        - locationId
        - contactId
    UpsertOpportunityResponse:
      type: object
      x-FeatureName: opportunities
      properties:
        opportunity:
          type: object
          description: Updated / New Opportunity
        new:
          type: boolean
          example: true
      required:
        - opportunity
        - new
    #endregion Opportunities

    #region OAuth
    GetAccessTokenInput:
      type: object
      x-FeatureName: oauth
      properties:
        client_id:
          type: string
          description: The ID provided by GHL for your integration
        client_secret:
          type: string
        grant_type:
          type: string
          enum:
            - authorization_code
            - refresh_token
        code:
          type: string
        refresh_token:
          type: string
        user_type:
          type: string
          description: The type of token to be requested
          example: Location
          enum:
            - Company
            - Location
        redirect_uri:
          type: string
          description: The redirect URI for your application
          example: https://myapp.com/oauth/callback/gohighlevel
      required:
        - client_id
        - client_secret
        - grant_type
    GetAccessCodeSuccessfulResponseDto:
      type: object
      x-FeatureName: oauth
      properties:
        access_token:
          type: string
          example: ab12dc0ae1234a7898f9ff06d4f69gh
        token_type:
          type: string
          example: Bearer
        expires_in:
          type: number
          example: 86399
        refresh_token:
          type: string
          example: xy34dc0ae1234a4858f9ff06d4f66ba
        scope:
          type: string
          example: conversations/message.readonly conversations/message.write
        userType:
          type: string
          example: Location
        locationId:
          type: string
          description: Location ID - Present only for Sub-Account Access Token
          example: l1C08ntBrFjLS0elLIYU
        companyId:
          type: string
          description: Company ID
          example: l1C08ntBrFjLS0elLIYU
        approvedLocations:
          description: Approved locations to generate location access token
          example:
            - l1C08ntBrFjLS0elLIYU
          type: array
          items:
            type: string
        hashedCompanyId:
          type: string
          description: Hashed companyId - Deprecated (will be removed by July 2023)
          example: 7db63a0b08e8ac3e5f43f5fef96adc0ce5bef033380c486a9b41c612e4627b7e
          deprecated: true
    GetLocationAccessTokenInput:
      type: object
      x-FeatureName: oauth
      properties:
        companyId:
          type: string
          description: Company Id of location you want to request token for
        locationId:
          type: string
          description: The location ID for which you want to obtain accessToken
      required:
        - companyId
        - locationId
    GetLocationAccessTokenResponse:
      type: object
      x-FeatureName: oauth
      properties:
        access_token:
          type: string
          example: ab12dc0ae1234a7898f9ff06d4f69gh
          description: Location access token which can be used to authenticate & authorize API under following scope
        token_type:
          type: string
          example: Bearer
        expires_in:
          type: number
          example: 86399
          description: Time in seconds remaining for token to expire
        scope:
          type: string
          example: conversations/message.readonly conversations/message.write
          description: Scopes the following accessToken have access to
        locationId:
          type: string
          description: Location ID - Present only for Sub-Account Access Token
          example: l1C08ntBrFjLS0elLIYU
    InstalledLocationSchema:
      type: object
      x-FeatureName: oauth
      properties:
        _id:
          type: string
          example: 0IHuJvc2ofPAAA8GzTRi
          description: Location ID
        name:
          type: string
          example: John Deo
          description: Name of the location
        address:
          type: string
          example: 47 W 13th St, New York, NY 10011, USA
          description: Address linked to location
        isInstalled:
          type: boolean
          example: true
          description: Check if the requested app is installed for following location
      required:
        - _id
        - name
        - address
    GetInstalledLocationsResponse:
      type: object
      x-FeatureName: oauth
      properties:
        locations:
          type: array
          items:
            $ref: '#/components/schemas/InstalledLocationSchema'
        count:
          type: number
          example: 1231
          description: Total location count under the company
    #endregion OAuth

    #region Snapshots
    SnapshotsSchema:
      type: object
      x-FeatureName: snapshots
      properties:
        id:
          type: string
          example: 1eM2UgkfaECOYyUdCo9Pa
          description: Snapshot Id.
        name:
          type: string
          example: Martial Arts Snapshot
          description: Name of the snapshot
        type:
          type: string
          example: own
          description: Type of snapshot - own or imported.
    ListSnapshotsResponse:
      type: object
      x-FeatureName: snapshots
      properties:
        snapshots:
          type: array
          items:
            $ref: '#/components/schemas/SnapshotsSchema'
    #endregion Snapshots

    #region Surveys
    Survey:
      type: object
      x-FeatureName: surveys
      properties:
        id:
          type: string
          example: I5GFa3d3cKjojpe4VVUx
        name:
          type: string
          example: Survey 1
        locationId:
          type: string
          example: ve9EPM428h8vShlRW1KT
    ListSurveysResponse:
      type: object
      x-FeatureName: surveys
      properties:
        surveys:
          type: array
          items:
            $ref: '#/components/schemas/Survey'
        total:
          type: number
          example: 20
          description: Number of surveys
    SurveySubmission:
      type: object
      x-FeatureName: surveyssurveys
      properties:
        id:
          type: string
          example: be759b9a-c3ec-4b29-ba07-fc3c89c77673
        contactId:
          type: string
          example: 9NkT25Vor1v4aQatFsv2
        createdAt:
          type: string
          example: '2020-11-01T18:02:21.000Z'
        surveyId:
          type: string
          example: jjusM6EOngDExnbo2DbU
        name:
          type: string
          example: test
        email:
          type: string
          example: test@test.com
        others:
          $ref: '#/components/schemas/FormSurveySubmissionOthers'
    ListSurveySubmissionsResponse:
      type: object
      x-FeatureName: surveys
      properties:
        submissions:
          type: array
          items:
            $ref: '#/components/schemas/SurveySubmission'
        meta:
          $ref: '#/components/schemas/PaginationMeta'
    #endregion Surveys

    #region Templates
    SmsTemplateSchema:
      type: object
      x-FeatureName: templates
      properties:
        body:
          type: string
          example: sms body
        attachments:
          example: []
          type: array
          items:
            type: object
            additionalProperties: true
    GetSmsTemplateResponseSchema:
      type: object
      x-FeatureName: templates
      properties:
        id:
          type: string
          example: 2yMwhgTNO19bpintqrap
        name:
          type: string
          example: sms template
        type:
          type: string
          example: sms
        template:
          $ref: '#/components/schemas/SmsTemplateSchema'
        dateAdded:
          type: string
          example: '2022-01-27T12:31:19.679Z'
        locationId:
          type: string
          example: ve9EPM428h8vShlRW1KT
        urlAttachments:
          example: []
          type: array
          items:
            type: string
    EmailTemplateSchema:
      type: object
      x-FeatureName: templates
      properties:
        subject:
          type: string
          example: subject text
        attachments:
          example: []
          type: array
          items:
            type: object
            additionalProperties: true
        html:
          type: string
          example: '<html><head><style>body{font-family: sans-serif;}</style></head><body>testing</body></html>'
    GetEmailTemplateResponseSchema:
      type: object
      x-FeatureName: templates
      properties:
        id:
          type: string
          example: 2yMwhgTNO19bpintqrap
        name:
          type: string
          example: email template
        type:
          type: string
          example: email
        dateAdded:
          type: string
          example: '2022-01-27T12:31:19.679Z'
        template:
          $ref: '#/components/schemas/EmailTemplateSchema'
        locationId:
          type: string
          example: ve9EPM428h8vShlRW1KT
    TemplateType:
      type: string
      x-FeatureName: templates
      x-EnumNames:
        - SMS
        - EMAIL
        - WHATSAPP
      enum:
        - sms
        - email
        - whatsapp
    ListTemplatesResponse:
      type: object
      x-FeatureName: templates
      properties:
        templates:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/GetSmsTemplateResponseSchema'
              - $ref: '#/components/schemas/GetEmailTemplateResponseSchema'
        totalCount:
          type: number
          example: 100
    #endregion Templates

    #region Trigger Links
    LinkSchema:
      type: object
      x-FeatureName: trigger-links
      properties:
        id:
          type: string
          example: n4AriwEnFrGh3tu08W0U
        name:
          type: string
          example: first tag
        redirectTo:
          type: string
          example: https://www.google.com/
        fieldKey:
          type: string
          example: '{{trigger_link.n4AriwEnFrGh3tu08W0U}}'
        locationId:
          type: string
          example: ve9EPM428h8vShlRW1KT
    ListTriggerLinksResponse:
      type: object
      x-FeatureName: trigger-links
      properties:
        links:
          type: array
          items:
            $ref: '#/components/schemas/LinkSchema'
    TriggerLinkInput:
      type: object
      x-FeatureName: trigger-links
      properties:
        locationId:
          type: string
          example: ve9EPM428h8vShlRW1KT
        name:
          type: string
          example: first tag
        redirectTo:
          type: string
          example: https://www.google.com/
      required:
        - locationId
        - name
        - redirectTo
    TriggerLinkResponse:
      type: object
      x-FeatureName: trigger-links
      properties:
        link:
          $ref: '#/components/schemas/LinkSchema'
    UpdateTriggerLinkInput:
      type: object
      x-FeatureName: trigger-links
      properties:
        name:
          type: string
          example: first tag
        redirectTo:
          type: string
          example: https://www.google.com/
      required:
        - name
        - redirectTo
    DeleteTriggerLinkResponse:
      type: object
      x-FeatureName: trigger-links
      properties:
        succeded:
          type: boolean
          example: true
    #endregion Trigger Links

    #region Users
    UserPermissions:
      type: object
      x-FeatureName: users
      properties:
        campaignsEnabled:
          type: boolean
          example: true
          default: true
        campaignsReadOnly:
          type: boolean
          example: false
          default: false
        contactsEnabled:
          type: boolean
          example: true
          default: true
        workflowsEnabled:
          type: boolean
          example: true
          default: true
        workflowsReadOnly:
          type: boolean
          example: true
          default: false
        triggersEnabled:
          type: boolean
          example: true
          default: true
        funnelsEnabled:
          type: boolean
          example: true
          default: true
        websitesEnabled:
          type: boolean
          example: false
          default: false
        opportunitiesEnabled:
          type: boolean
          example: true
          default: true
        dashboardStatsEnabled:
          type: boolean
          example: true
          default: true
        bulkRequestsEnabled:
          type: boolean
          example: true
          default: true
        appointmentsEnabled:
          type: boolean
          example: true
          default: true
        reviewsEnabled:
          type: boolean
          example: true
          default: true
        onlineListingsEnabled:
          type: boolean
          example: true
          default: true
        phoneCallEnabled:
          type: boolean
          example: true
          default: true
        conversationsEnabled:
          type: boolean
          example: true
          default: true
        assignedDataOnly:
          type: boolean
          example: false
          default: false
        adwordsReportingEnabled:
          type: boolean
          example: false
          default: false
        membershipEnabled:
          type: boolean
          example: false
          default: false
        facebookAdsReportingEnabled:
          type: boolean
          example: false
          default: false
        attributionsReportingEnabled:
          type: boolean
          example: false
          default: false
        settingsEnabled:
          type: boolean
          example: true
          default: true
        tagsEnabled:
          type: boolean
          example: true
          default: true
        leadValueEnabled:
          type: boolean
          example: true
          default: true
        marketingEnabled:
          type: boolean
          example: true
          default: true
        agentReportingEnabled:
          type: boolean
          example: true
          default: true
        botService:
          type: boolean
          example: false
          default: false
        socialPlanner:
          type: boolean
          example: true
          default: true
        bloggingEnabled:
          type: boolean
          example: true
          default: true
        invoiceEnabled:
          type: boolean
          example: true
          default: true
        affiliateManagerEnabled:
          type: boolean
          example: true
          default: true
        contentAiEnabled:
          type: boolean
          example: true
          default: true
        refundsEnabled:
          type: boolean
          example: true
          default: true
        recordPaymentEnabled:
          type: boolean
          example: true
          default: true
        cancelSubscriptionEnabled:
          type: boolean
          example: true
          default: true
        paymentsEnabled:
          type: boolean
          example: true
          default: true
    UserRole:
      type: object
      x-FeatureName: users
      properties:
        type:
          type: string
          example: account
        role:
          type: string
          example: admin
        locationIds:
          example:
            - ve9EPM428h8vShlRW1KT
          type: array
          items:
            type: string
    User:
      type: object
      x-FeatureName: users
      properties:
        id:
          type: string
          example: 0IHuJvc2ofPAAA8GzTRi
        name:
          type: string
          example: John Deo
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Deo
        email:
          type: string
          example: john@deo.com
        phone:
          type: string
          example: +1 808-868-8888
        extension:
          type: string
          example: ''
        permissions:
          $ref: '#/components/schemas/UserPermissions'
        roles:
          $ref: '#/components/schemas/UserRole'
        deleted:
          type: boolean
          example: false
    SearchUsersResponse:
      type: object
      x-FeatureName: users
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
        count:
          type: number
          example: 1231
    ListLocationUsersResponse:
      type: object
      x-FeatureName: users
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
    UserResponse:
      type: object
      x-FeatureName: users
      properties:
        id:
          type: string
          example: 0IHuJvc2ofPAAA8GzTRi
        name:
          type: string
          example: John Deo
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Deo
        email:
          type: string
          example: john@deo.com
        phone:
          type: string
          example: +1 808-868-8888
        extension:
          type: string
          example: ''
        permissions:
          $ref: '#/components/schemas/UserPermissions'
        roles:
          $ref: '#/components/schemas/UserRole'
    CreateUserInput:
      type: object
      x-FeatureName: users
      properties:
        companyId:
          type: string
          example: ve9EPM428h8vShlRW1KT
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Deo
        email:
          type: string
          example: john@deo.com
        password:
          type: string
          example: '*******'
        phone:
          type: string
          example: '+18832327657'
        type:
          type: string
          example: account
        role:
          type: string
          example: admin
        locationIds:
          example:
            - C2QujeCh8ZnC7al2InWR
          type: array
          items:
            type: string
        permissions:
          $ref: '#/components/schemas/UserPermissions'
        profilePhoto:
          type: string
          example: https://img.png
      required:
        - companyId
        - firstName
        - lastName
        - email
        - password
        - type
        - role
        - locationIds
        - permissions
    UpdateUserInput:
      type: object
      x-FeatureName: users
      properties:
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Deo
        email:
          type: string
          example: john@deo.com
        password:
          type: string
          example: '*******'
        phone:
          type: string
          example: '+18832327657'
        type:
          type: string
          example: account
        role:
          type: string
          example: admin
        companyId:
          type: string
          description: Company/Agency Id. Required for Agency Level access
          example: UAXssdawIWAWD
        locationIds:
          example:
            - C2QujeCh8ZnC7al2InWR
          type: array
          items:
            type: string
        permissions:
          $ref: '#/components/schemas/UserPermissions'
        profilePhoto:
          type: string
          example: https://img.png
    DeleteUserResponse:
      type: object
      x-FeatureName: users
      properties:
        succeded:
          type: boolean
          example: true
        message:
          type: string
          example: Queued deleting user with e-mail john@deo.com and name John Deo. Will take effect in a few minutes.
    #endregion Users

    #region Workflows
    Workflow:
      type: object
      x-FeatureName: workflows
      properties:
        id:
          type: string
          example: 78559bb3-b920-461e-b010-7b2a2816d2a9
        name:
          type: string
          example: First Workflow
        status:
          type: string
          example: draft
        version:
          type: number
          example: 2
        createdAt:
          type: string
          example: '2021-05-26T11:33:49.000Z'
        updatedAt:
          type: string
          example: '2021-05-26T11:33:49.000Z'
        locationId:
          type: string
          example: eBG6WapS3v4ZqwA45MTxtYJ
    ListWorkflowsResponse:
      type: object
      x-FeatureName: workflows
      properties:
        workflows:
          type: array
          items:
            $ref: '#/components/schemas/Workflow'
    #endregion Workflows
paths:
  #region Businesses
  /businesses/:
    get:
      operationId: listBusinesses
      summary: List Businesses
      description: Get a list of businesses in a location
      x-FeatureName: businesses
      x-ApiVersion: '2021-04-15'
      parameters:
        - name: locationId
          required: true
          in: query
          example: 5DP4iH6HLkQsiKESj6rh
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBusinessesResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
      tags:
        - Businesses
    post:
      operationId: createBusiness
      summary: Create Business
      description: Create Business
      x-FeatureName: businesses
      x-ApiVersion: '2021-04-15'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBusinessInput'
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateBusinessResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Businesses
  /businesses/{businessId}:
    get:
      operationId: getBusiness
      summary: Get Business
      description: Get a business by ID
      x-FeatureName: businesses
      x-ApiVersion: '2021-04-15'
      parameters:
        - name: businessId
          required: true
          in: path
          example: 5DP4iH6HLkQsiKESj6rh
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBusinessResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Businesses
    put:
      operationId: updateBusiness
      summary: Update Business
      description: Update a business by ID
      x-FeatureName: businesses
      x-ApiVersion: '2021-04-15'
      parameters:
        - name: businessId
          required: true
          in: path
          example: 5DP4iH6HLkQsiKESj6rh
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBusinessInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateBusinessResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Businesses
    delete:
      operationId: deleteBusiness
      summary: Delete Business
      description: Delete Business
      x-FeatureName: businesses
      x-ApiVersion: '2021-04-15'
      parameters:
        - name: businessId
          required: true
          in: path
          example: 5DP4iH6HLkQsiKESj6rh
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteBusinessResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Businesses
  #endregion Businesses

  #region Calendars
  /calendars/groups:
    get:
      operationId: listCalendarGroups
      summary: Get Calendar Groups
      description: Get all calendar groups in a location.
      x-ApiVersion: '2021-04-15'
      x-FeatureName: calendars
      parameters:
        - name: locationId
          required: true
          in: query
          description: Location Id
          example: ve9EPM428h8vShlRW1KT
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCalendarGroupsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
      tags:
        - Calendars
      security:
        - locationBearerToken: []
    post:
      operationId: createCalendarGroup
      summary: Create Calendar Group
      description: Create a calendar group
      x-ApiVersion: '2021-04-15'
      x-FeatureName: calendars
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCalendarGroupDto'
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateCalendarGroupResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
      tags:
        - Calendars
      security:
        - locationBearerToken: []
  /calendars/groups/validate-slug:
    post:
      operationId: validateCalendarGroupSlug
      summary: Validate Calendar Group Slug
      description: Check availability slug for calendar groups.
      x-ApiVersion: '2021-04-15'
      x-FeatureName: calendars
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateCalendarGroupSlugInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateCalendarGroupSlugResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
      tags:
        - Calendars
      security:
        - locationBearerToken: []
  /calendars/groups/{groupId}:
    delete:
      operationId: deleteCalendarGroup
      summary: Delete Calendar Group
      description: Delete a calendar group
      x-ApiVersion: '2021-04-15'
      x-FeatureName: calendars
      parameters:
        - name: groupId
          required: true
          in: path
          description: Group Id
          example: ocQHyuzHvysMo5N5VsXc
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCalendarGroupResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
      tags:
        - Calendars
      security:
        - locationBearerToken: []
    put:
      operationId: updateCalendarGroup
      summary: Update Calendar Group
      description: Update Calendar Group
      x-ApiVersion: '2021-04-15'
      x-FeatureName: calendars
      parameters:
        - name: groupId
          required: true
          in: path
          description: Group Id
          example: ocQHyuzHvysMo5N5VsXc
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCalendarGroupInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateCalendarGroupResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
      tags:
        - Calendars
      security:
        - locationBearerToken: []
  /calendars/groups/{groupId}/status:
    put:
      operationId: updateCalendarGroupStatus
      summary: Update Calendar Group Status
      description: Update Calendar Group Status
      x-ApiVersion: '2021-04-15'
      x-FeatureName: calendars
      parameters:
        - name: groupId
          required: true
          in: path
          description: Group Id
          example: ocQHyuzHvysMo5N5VsXc
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCalendarGroupStatusInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCalendarGroupStatusResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
      tags:
        - Calendars
      security:
        - bearer: []
  /calendars/events:
    get:
      operationId: listCalendarEvents
      summary: List Calendar Events
      description: List Calendar Events
      x-ApiVersion: '2021-04-15'
      x-FeatureName: calendars
      parameters:
        - name: locationId
          required: true
          in: query
          description: Location Id
          example: 0007BWpSzSwfiuSl0tR2
          schema:
            type: string
        - name: userId
          required: false
          in: query
          description: User Id - Owner of an appointment. Either of userId, groupId or calendarId is required
          example: CVokAlI8fgw4WYWoCtQz
          schema:
            type: string
        - name: calendarId
          required: false
          in: query
          description: Either of calendarId, userId or groupId is required
          example: BqTwX8QFwXzpegMve9EQ
          schema:
            type: string
        - name: groupId
          required: false
          in: query
          description: Either of groupId, calendarId or userId is required
          example: ocQHyuzHvysMo5N5VsXc
          schema:
            type: string
        - name: startTime
          required: true
          in: query
          description: Start Time (in millis)
          example: '1680373800000'
          schema:
            type: string
        - name: endTime
          required: true
          in: query
          description: End Time (in millis)
          example: '1680978599999'
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCalendarEventsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
      tags:
        - Calendars
      security:
        - locationBearerToken: []
  /calendars/{calendarId}/free-slots:
    get:
      operationId: getCalendarAvailableSlots
      summary: Get Calendar Available Slots
      description: |
        Get available slots for a calendar in the specified date range. 
        Optionally a consumer can also request available slots in a particular
        timezone, and/or for a particular user.
      x-ApiVersion: '2021-04-15'
      x-FeatureName: calendars
      parameters:
        - name: calendarId
          required: true
          in: path
          description: Calendar Id
          example: ocQHyuzHvysMo5N5VsXc
          schema:
            type: string
        - name: startDate
          required: true
          in: query
          description: Start Date
          example: '1548898600000'
          schema:
            type: string
        - name: endDate
          required: true
          in: query
          description: End Date
          example: '1601490599999'
          schema:
            type: string
        - name: timezone
          required: false
          in: query
          description: The timezone in which the free slots are returned
          example: America/Chihuahua
          schema:
            type: string
        - name: userId
          required: false
          in: query
          description: The user for whom the free slots are returned
          example: 082goXVW3lIExEQPOnd3
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCalendarAvailableSlotsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
      tags:
        - Calendars
      security:
        - locationBearerToken: []
  /calendars/{calendarId}:
    put:
      operationId: updateCalendar
      summary: Update Calendar
      description: Update a calendar by ID.
      x-ApiVersion: '2021-04-15'
      x-FeatureName: calendars
      parameters:
        - name: calendarId
          required: true
          in: path
          description: Calendar Id
          example: ocQHyuzHvysMo5N5VsXc
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCalendarInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
      tags:
        - Calendars
      security:
        - locationBearerToken: []
    get:
      operationId: getCalendar
      summary: Get Calendar
      description: Get calendar by ID
      x-ApiVersion: '2021-04-15'
      x-FeatureName: calendars
      parameters:
        - name: calendarId
          required: true
          in: path
          description: Calendar Id
          example: ocQHyuzHvysMo5N5VsXc
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
      tags:
        - Calendars
      security:
        - locationBearerToken: []
    delete:
      operationId: deleteCalendar
      summary: Delete Calendar
      description: Delete calendar by ID
      x-ApiVersion: '2021-04-15'
      x-FeatureName: calendars
      parameters:
        - name: calendarId
          required: true
          in: path
          description: Calendar Id
          example: ocQHyuzHvysMo5N5VsXc
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
      tags:
        - Calendars
      security:
        - locationBearerToken: []
  /calendars/events/appointments/{eventId}:
    get:
      operationId: getAppointment
      summary: Get Appointment
      description: Get appointment by ID
      x-ApiVersion: '2021-04-15'
      x-FeatureName: calendars
      parameters:
        - name: eventId
          required: true
          in: path
          description: Event Id
          example: ocQHyuzHvysMo5N5VsXc
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
      tags:
        - Calendars
      security:
        - locationBearerToken: []
    put:
      operationId: updateAppointment
      summary: Update Appointment
      description: Update appointment by ID
      x-ApiVersion: '2021-04-15'
      x-FeatureName: calendars
      parameters:
        - name: eventId
          required: true
          in: path
          description: Event Id
          example: ocQHyuzHvysMo5N5VsXc
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAppointmentInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
      tags:
        - Calendars
      security:
        - locationBearerToken: []
  /calendars/events/appointments:
    post:
      operationId: createAppointment
      summary: Create Appointment
      description: Create appointment
      x-ApiVersion: '2021-04-15'
      x-FeatureName: calendars
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppointmentInput'
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
      tags:
        - Calendars
      security:
        - locationBearerToken: []
  /calendars/events/block-slots:
    post:
      operationId: blockCalendarSlot
      summary: Block Calendar Slot
      description: |
        Block a calendar slot so it doesn't show up as available for booking.
      x-ApiVersion: '2021-04-15'
      x-FeatureName: calendars
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBlockedSlotInput'
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockedSlotResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
      tags:
        - Calendars
      security:
        - locationBearerToken: []
  /calendars/events/block-slots/{eventId}:
    put:
      operationId: updateBlockedSlot
      summary: Update Blocked Slot
      description: Update blocked slot by ID
      x-ApiVersion: '2021-04-15'
      x-FeatureName: calendars
      parameters:
        - name: eventId
          required: true
          in: path
          description: Event Id
          example: ocQHyuzHvysMo5N5VsXc
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBlockedSlotInput'
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockedSlotResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
      tags:
        - Calendars
      security:
        - locationBearerToken: []
  /calendars/events/{eventId}:
    delete:
      operationId: deleteCalendarEvent
      summary: Delete Calendar Event
      description: Delete a calendar event by ID
      x-ApiVersion: '2021-04-15'
      x-FeatureName: calendars
      parameters:
        - name: eventId
          required: true
          in: path
          description: Event Id
          example: ocQHyuzHvysMo5N5VsXc
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAppointmentInput'
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCalendarEventResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
      tags:
        - Calendars
      security:
        - locationBearerToken: []
  /calendars/:
    get:
      operationId: listCalendars
      summary: List Calendars
      description: List all calendars in a location.
      x-ApiVersion: '2021-04-15'
      x-FeatureName: calendars
      parameters:
        - name: locationId
          required: true
          in: query
          description: Location Id
          example: ve9EPM428h8vShlRW1KT
          schema:
            type: string
        - name: groupId
          required: false
          in: query
          description: Group Id
          example: BqTwX8QFwXzpegMve9EQ
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCalendarsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
      tags:
        - Calendars
      security:
        - locationBearerToken: []
    post:
      operationId: createCalendar
      summary: Create Calendar
      description: Create calendar in a location.
      x-ApiVersion: '2021-04-15'
      x-FeatureName: calendars
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCalendarInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
      tags:
        - Calendars
      security:
        - locationBearerToken: []
  #endregion Calendars

  #region Campaigns
  /campaigns/:
    get:
      operationId: listCampaigns
      summary: List Campaigns
      description: List campaigns in a location
      deprecated: true
      x-ApiVersion: '2021-04-15'
      x-FeatureName: campaigns
      parameters:
        - name: locationId
          required: true
          in: query
          example: ve9EPM428h8vShlRW1KT
          schema:
            type: string
        - name: status
          required: false
          in: query
          example: draft
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCampaignsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Campaigns
  #endregion Campaigns

  #region Contacts
  /contacts/:
    post:
      operationId: createContact
      summary: Create Contact
      description: |
        Create a contact in a location.

        For a list of acceptable values for the `country` field, see 
        https://highlevel.stoplight.io/docs/integrations/ZG9jOjI4MzUzNDIy-country-list.
      x-ApiVersion: '2021-07-28'
      x-FeatureName: contacts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContactInput'
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateContactResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Contacts
      security:
        - locationBearerToken: []
    get:
      operationId: listContacts
      summary: List Contacts
      description: Get a list of contacts in a location.
      x-ApiVersion: '2021-07-28'
      x-FeatureName: contacts
      parameters:
        - name: locationId
          required: true
          in: query
          description: Location Id
          example: ve9EPM428h8vShlRW1KT
          schema:
            type: string
        - name: startAfterId
          required: false
          in: query
          description: Start After Id
          example: UIaE1WjAwWKdlyD7osQI
          schema:
            type: string
        - name: startAfter
          required: false
          in: query
          description: Start Afte
          example: 1603870249758
          schema:
            type: number
        - name: query
          required: false
          in: query
          description: Contact Query
          example: John
          schema:
            type: string
        - name: limit
          required: false
          in: query
          example: 20
          description: Limit Per Page records count. will allow maximum up to 100 and default will be 20
          schema:
            default: 20
            type: number
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListContactsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Contacts
      security:
        - locationBearerToken: []
  /contacts/upsert:
    post:
      operationId: upsertContact
      summary: Upsert Contact
      description: |
        Update or create a contact in a location.

        For a list of acceptable values for the `country` field  see
        https://highlevel.stoplight.io/docs/integrations/ZG9jOjI4MzUzNDIy-country-list.
      x-ApiVersion: '2021-07-28'
      x-FeatureName: contacts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertContactInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertContactsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Contacts
      security:
        - locationBearerToken: []
  /contacts/{contactId}:
    get:
      operationId: getContact
      summary: Get Contact
      description: Get a contact by ID
      x-ApiVersion: '2021-07-28'
      x-FeatureName: contacts
      parameters:
        - name: contactId
          required: true
          in: path
          description: Contact Id
          example: ocQHyuzHvysMo5N5VsXc
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetContactResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Contacts
      security:
        - locationBearerToken: []
    put:
      operationId: updateContact
      summary: Update Contact
      description: |
        Update a contact by ID.

        For a list of acceptable values for the `country` field  see 
        https://highlevel.stoplight.io/docs/integrations/ZG9jOjI4MzUzNDIy-country-list.
      x-ApiVersion: '2021-07-28'
      x-FeatureName: contacts
      parameters:
        - name: contactId
          required: true
          in: path
          description: Contact Id
          example: ocQHyuzHvysMo5N5VsXc
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContactInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateContactsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Contacts
      security:
        - locationBearerToken: []
    delete:
      operationId: deleteContact
      summary: Delete Contact
      description: Delete a contact by ID
      x-ApiVersion: '2021-07-28'
      x-FeatureName: contacts
      parameters:
        - name: contactId
          required: true
          in: path
          description: Contact Id
          example: ocQHyuzHvysMo5N5VsXc
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteContactsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Contacts
      security:
        - locationBearerToken: []
  /contacts/business/{businessId}:
    get:
      operationId: listContactsOfBusiness
      summary: List Contacts of Business
      description: Get a list of contacts associated with a business
      x-ApiVersion: '2021-07-28'
      x-FeatureName: contacts
      parameters:
        - name: businessId
          required: true
          in: path
          schema:
            type: string
        - name: limit
          required: false
          in: query
          example: '10'
          schema:
            default: '25'
            type: string
        - name: locationId
          required: true
          in: query
          example: 5DP4iH6HLkQsiKESj6rh
          schema:
            type: string
        - name: skip
          required: false
          in: query
          example: '10'
          schema:
            default: '0'
            type: string
        - name: query
          required: false
          in: query
          example: contact name
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListContactsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Contacts
      security:
        - locationBearerToken: []
  /contacts/bulk/business:
    post:
      operationId: bulkAddOrRemoveContactsFromBusiness
      summary: Add/Remove Contacts From Business
      description: Add/Remove Contacts From Business
      x-ApiVersion: '2021-07-28'
      x-FeatureName: contacts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBusinessContactsInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactsBulkUpdateResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Businesses
      security:
        - locationBearerToken: []
  #endregion Contacts

  #region Contact Appointments
  /contacts/{contactId}/appointments:
    get:
      operationId: getContactAppointments
      summary: Get Contact Appointments
      description: Get a list of appointments for a contact
      x-ApiVersion: '2021-07-28'
      x-FeatureName: contacts
      parameters:
        - name: contactId
          required: true
          in: path
          description: Contact Id
          example: sx6wyHhbFdRXh302LLNR
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetContactAppointmentsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Contact Appointments
      security:
        - locationBearerToken: []
  #endregion Contact Appointments

  #region Contact Campaigns
  /contacts/{contactId}/campaigns/{campaignId}:
    post:
      operationId: addContactToCampaign
      summary: Add Contact to Campaign
      description: |
        Add contact to a campaign

        **NOTE:** Campaigns are deprecated. Use workflows instead.
      deprecated: true
      x-ApiVersion: '2021-07-28'
      x-FeatureName: contacts
      parameters:
        - name: contactId
          required: true
          in: path
          description: Contact Id
          example: 3bZD1nQzbul0MCancbQD
          schema:
            type: string
        - name: campaignId
          required: true
          in: path
          description: Campaigns Id
          example: Y2I9XM7aO1hncuSOlc9L
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddContactToCampaignInput'
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateContactCampaignResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Contact Campaigns
      security:
        - locationBearerToken: []
    delete:
      operationId: removeContactFromCampaign
      summary: Remove Contact From Campaign
      description: |
        Remove Contact From Campaign

        **NOTE:** Campaigns are deprecated. Use workflows instead.
      deprecated: true
      x-ApiVersion: '2021-07-28'
      x-FeatureName: contacts
      parameters:
        - name: contactId
          required: true
          in: path
          description: Contact Id
          example: 3bZD1nQzbul0MCancbQD
          schema:
            type: string
        - name: campaignId
          required: true
          in: path
          description: Campaigns Id
          example: Y2I9XM7aO1hncuSOlc9L
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateContactCampaignResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Contact Campaigns
      security:
        - locationBearerToken: []
  /contacts/{contactId}/campaigns/removeAll:
    delete:
      operationId: removeContactFromAllCampaigns
      summary: Remove Contact From All Campaign
      description: |
        Remove contact from all current campaigns

        **NOTE:** Campaigns are deprecated. Use workflows instead.
      deprecated: true
      x-ApiVersion: '2021-07-28'
      x-FeatureName: contacts
      parameters:
        - name: contactId
          required: true
          in: path
          description: Contact Id
          example: 3bZD1nQzbul0MCancbQD
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateContactCampaignResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Contact Campaigns
      security:
        - locationBearerToken: []
  #endregion Contact Campaigns

  #region Contact Notes
  /contacts/{contactId}/notes:
    get:
      operationId: listContactNotes
      summary: List Contact Notes
      description: Get a list of notes for a contact
      x-ApiVersion: '2021-07-28'
      x-FeatureName: contacts
      parameters:
        - name: contactId
          required: true
          in: path
          description: Contact Id
          example: sx6wyHhbFdRXh302LLNR
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListContactNotesResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
      tags:
        - Contact Notes
      security:
        - locationBearerToken: []
    post:
      operationId: createContactNote
      summary: Create Contact Note
      description: Add a note to a contact
      x-ApiVersion: '2021-07-28'
      x-FeatureName: contacts
      parameters:
        - name: contactId
          required: true
          in: path
          description: Contact Id
          example: sx6wyHhbFdRXh302LLNR
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactNoteInput'
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactNoteResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Contact Notes
      security:
        - locationBearerToken: []
  /contacts/{contactId}/notes/{id}:
    get:
      operationId: getContactNote
      summary: Get Contact Note
      description: Get a contact note by ID
      x-ApiVersion: '2021-07-28'
      x-FeatureName: contacts
      parameters:
        - name: contactId
          required: true
          in: path
          description: Contact Id
          example: sx6wyHhbFdRXh302LLNR
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: Note Id
          example: ocQHyuzHvysMo5N5VsXc
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactNoteResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Contact Notes
      security:
        - locationBearerToken: []
    put:
      operationId: updateContactNote
      summary: Update Contact Note
      description: Update a contact note by ID
      x-ApiVersion: '2021-07-28'
      x-FeatureName: contacts
      parameters:
        - name: contactId
          required: true
          in: path
          description: Contact Id
          example: sx6wyHhbFdRXh302LLNR
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: Note Id
          example: ocQHyuzHvysMo5N5VsXc
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactNoteInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactNoteResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Contact Notes
      security:
        - locationBearerToken: []
    delete:
      operationId: deleteContactNote
      summary: Delete Contact Note
      description: Delete a constact note by ID
      x-ApiVersion: '2021-07-28'
      x-FeatureName: contacts
      parameters:
        - name: contactId
          required: true
          in: path
          description: Contact Id
          example: sx6wyHhbFdRXh302LLNR
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: Note Id
          example: ocQHyuzHvysMo5N5VsXc
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteContactNoteResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Contact Notes
      security:
        - locationBearerToken: []
  #endregion Contact Notes

  #region Contact Search
  /contacts/search/duplicate:
    get:
      operationId: findDuplicateContacts
      summary: Find Duplicate Contacts
      description: Find duplicate contacts by email and/or phone
      x-ApiVersion: '2021-07-28'
      x-FeatureName: contacts
      parameters:
        - name: locationId
          required: true
          in: query
          example: sadadya1u12basyhasd
          description: Location Id
          schema:
            type: string
        - name: number
          required: false
          in: query
          example: '+1423164516'
          description: Phone Number - Pass in URL Encoded form. i.e +1423164516 will become `%2B1423164516`
          schema:
            type: string
        - name: email
          required: false
          in: query
          example: abc@abc.com
          description: Email - Pass in URL Encoded form. i.e test+abc@gmail.com will become `test%2Babc%40gmail.com`
          schema:
            type: string
      responses:
        '200':
          description: ''
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
      tags:
        - Contact Search
      security:
        - locationBearerToken: []
  #endregion Contact Search

  #region Contact Tags
  /contacts/{contactId}/tags:
    post:
      operationId: addContactTags
      summary: Add Contact Tags
      description: Add tags to a contact. Will keep existing tags in place.
      x-ApiVersion: '2021-07-28'
      x-FeatureName: contacts
      parameters:
        - name: contactId
          required: true
          in: path
          description: Contact Id
          example: sx6wyHhbFdRXh302LLNR
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactTagsInput'
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddContactTagsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Contact Tags
      security:
        - locationBearerToken: []
    delete:
      operationId: removeContactTags
      summary: Remove Contact Tags
      description: Remove the specified tags from a contact
      x-ApiVersion: '2021-07-28'
      x-FeatureName: contacts
      parameters:
        - name: contactId
          required: true
          in: path
          description: Contact Id
          example: sx6wyHhbFdRXh302LLNR
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactTagsInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveContactTagsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Contact Tags
      security:
        - locationBearerToken: []
  #endregion Contact Tags

  #region Contact Tasks
  /contacts/{contactId}/tasks:
    get:
      operationId: listContactTasks
      summary: List Contact Tasks
      description: Get a list of tasks for a contact
      x-ApiVersion: '2021-07-28'
      x-FeatureName: contacts
      parameters:
        - name: contactId
          required: true
          in: path
          description: Contact Id
          example: sx6wyHhbFdRXh302LLNR
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListContactTasksResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
      tags:
        - Contact Tasks
      security:
        - locationBearerToken: []
    post:
      operationId: createContactTask
      summary: Create Contact Task
      description: Create a task for a contact
      x-ApiVersion: '2021-07-28'
      x-FeatureName: contacts
      parameters:
        - name: contactId
          required: true
          in: path
          description: Contact Id
          example: sx6wyHhbFdRXh302LLNR
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContactTaskInput'
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactTaskResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Contact Tasks
      security:
        - locationBearerToken: []
  /contacts/{contactId}/tasks/{taskId}:
    get:
      operationId: getContactTask
      summary: Get Contact Task
      description: Get a task for a contact by ID
      x-ApiVersion: '2021-07-28'
      x-FeatureName: contacts
      parameters:
        - name: contactId
          required: true
          in: path
          description: Contact Id
          example: sx6wyHhbFdRXh302LLNR
          schema:
            type: string
        - name: taskId
          required: true
          in: path
          description: Task Id
          example: ocQHyuzHvysMo5N5VsXc
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactTaskResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
      tags:
        - Contact Tasks
      security:
        - locationBearerToken: []
    put:
      operationId: updateContactTask
      summary: Update Contact Task
      description: Update a task for a contact by ID
      x-ApiVersion: '2021-07-28'
      x-FeatureName: contacts
      parameters:
        - name: contactId
          required: true
          in: path
          description: Contact Id
          example: sx6wyHhbFdRXh302LLNR
          schema:
            type: string
        - name: taskId
          required: true
          in: path
          description: Task Id
          example: ocQHyuzHvysMo5N5VsXc
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContactTaskInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactTaskResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Contact Tasks
      security:
        - locationBearerToken: []
    delete:
      operationId: deleteContactTask
      summary: Delete Contact Task
      description: Delete a task for a contact by ID
      x-ApiVersion: '2021-07-28'
      x-FeatureName: contacts
      parameters:
        - name: contactId
          required: true
          in: path
          description: Contact Id
          example: sx6wyHhbFdRXh302LLNR
          schema:
            type: string
        - name: taskId
          required: true
          in: path
          description: Task Id
          example: ocQHyuzHvysMo5N5VsXc
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteContactTaskResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
      tags:
        - Contact Tasks
      security:
        - locationBearerToken: []
  /contacts/{contactId}/tasks/{taskId}/completed:
    put:
      operationId: updateContactTaskStatus
      summary: Update Contact Task Status
      description: Update the status of a task for a contact by ID
      x-ApiVersion: '2021-07-28'
      x-FeatureName: contacts
      parameters:
        - name: contactId
          required: true
          in: path
          description: Contact Id
          example: sx6wyHhbFdRXh302LLNR
          schema:
            type: string
        - name: taskId
          required: true
          in: path
          description: Task Id
          example: ocQHyuzHvysMo5N5VsXc
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContactTaskStatusInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactTaskResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Contact Tasks
      security:
        - locationBearerToken: []
  #endregion Contact Tasks

  #region Contact Workflows
  /contacts/{contactId}/workflow/{workflowId}:
    post:
      operationId: addContactToWorkflow
      summary: Add Contact to Workflow
      description: Add Contact to Workflow
      x-ApiVersion: '2021-07-28'
      x-FeatureName: contacts
      parameters:
        - name: contactId
          required: true
          in: path
          description: Contact Id
          example: sx6wyHhbFdRXh302LLNR
          schema:
            type: string
        - name: workflowId
          required: true
          in: path
          description: Workflow Id
          example: sx6wyHhbFdRXh302LLNR
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactWorkflowInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactWorkflowResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Contact Workflows
      security:
        - locationBearerToken: []
    delete:
      operationId: removeContactFromWorkflow
      summary: Remove Contact From Workflow
      description: Remove a contact from the specified workflow
      x-ApiVersion: '2021-07-28'
      x-FeatureName: contacts
      parameters:
        - name: contactId
          required: true
          in: path
          description: Contact Id
          example: sx6wyHhbFdRXh302LLNR
          schema:
            type: string
        - name: workflowId
          required: true
          in: path
          description: Workflow Id
          example: sx6wyHhbFdRXh302LLNR
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactWorkflowResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Contact Workflows
      security:
        - locationBearerToken: []
  #endregion Contact Workflows

  #region Conversations
  /conversations/:
    post:
      operationId: createConversation
      summary: Create Conversation
      description: Creates a new conversation with the data provided
      x-ApiVersion: '2021-04-15'
      x-FeatureName: conversations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConversationInput'
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
      tags:
        - Conversations
      security:
        - locationBearerToken: []
  /conversations/search:
    get:
      operationId: searchConversation
      summary: Search Conversations
      description: |
        Returns a list of all conversations matching the search criteria along
        with the sort and filter options selected.
      x-ApiVersion: '2021-04-15'
      x-FeatureName: conversations
      parameters:
        - name: locationId
          required: true
          in: query
          description: Location Id
          example: ABCHkzuJQ8ZMd4Te84GK
          schema:
            type: string
        - name: contactId
          required: false
          in: query
          description: Contact Id
          example: 9VEmS0si86GW6gXWU89b
          schema:
            type: string
        - name: assignedTo
          required: false
          in: query
          description: |
            Assigned to user Id. Multiple values are comma separated. Pass 
            `unassigned` to fetch all unassigned conversations.
          example: ABCHkzuJQ8ZMd4Te84GK,fGiae4CHkzoskh8thsik
          schema:
            type: string
        - name: query
          required: false
          in: query
          description: Search paramater as a string
          example: Search string
          schema:
            type: string
        - name: sort
          required: false
          in: query
          description: Sort paramater - asc or desc
          example: asc
          schema:
            enum:
              - asc
              - desc
            type: string
        - name: startAfterDate
          required: false
          in: query
          description: Search to begin after the specified date - should contain the sort value of the last document
          example: 1600854
          schema:
            anyOf:
              - $ref: '#/components/schemas/StartAfterNumberSchema'
              - $ref: '#/components/schemas/StartAfterArrayNumberSchema'
        - name: id
          required: false
          in: query
          description: Id of the conversation
          example: ABCHkzuJQ8ZMd4Te84GK
          schema:
            type: string
        - name: limit
          required: false
          in: query
          description: The number of items to return per page. Defaults to 20.
          example: 20
          schema:
            type: number
        - name: lastMessageType
          required: false
          in: query
          description: Type of the last message in the conversation as a string
          example: TYPE_SMS
          schema:
            $ref: '#/components/schemas/ConversationLastMessageType'
        - name: lastMessageAction
          required: false
          in: query
          description: Action of the last outbound message in the conversation as string.
          example: manual
          schema:
            enum:
              - automated
              - manual
            type: string
        - name: lastMessageDirection
          required: false
          in: query
          description: Direction of the last message in the conversation as string.
          example: inbound
          schema:
            enum:
              - inbound
              - outbound
            type: string
        - name: status
          required: false
          in: query
          description: |
            The status of the conversation to be filtered. The following values 
            are supported:
            - `all`
            - `read`
            - `unread`
            - `starred`
          example: all
          schema:
            enum:
              - all
              - read
              - unread
              - starred
              - recents
            type: string
        - name: sortBy
          required: false
          in: query
          description: |
            The sorting of the conversation to be filtered assignedTo: manual 
            messages or all messages.
          example: last_message_date
          schema:
            enum:
              - last_manual_message_date
              - last_message_date
            type: string
      responses:
        '200':
          description: Successfully fetched the conversations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchConversationResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
      tags:
        - Conversations
      security:
        - locationBearerToken: []
  /conversations/{conversationId}:
    get:
      operationId: getConversation
      summary: Get Conversation
      description: Get details about a conversation by ID
      x-ApiVersion: '2021-04-15'
      x-FeatureName: conversations
      parameters:
        - name: conversationId
          required: true
          in: path
          description: Conversation ID as string
          example: tDtDnQdgm2LXpyiqYvZ6
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
      tags:
        - Conversations
      security:
        - locationBearerToken: []
    put:
      operationId: updateConversation
      summary: Update Conversation
      description: Update the conversation details based on the conversation ID
      x-FeatureName: conversations
      x-ApiVersion: '2021-04-15'
      parameters:
        - name: conversationId
          required: true
          in: path
          description: Conversation ID as string
          example: tDtDnQdgm2LXpyiqYvZ6
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConversationInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
      tags:
        - Conversations
      security:
        - locationBearerToken: []
    delete:
      operationId: deleteConversation
      summary: Delete Conversation
      description: Delete the conversation details based on the conversation ID
      x-FeatureName: conversations
      x-ApiVersion: '2021-04-15'
      parameters:
        - name: conversationId
          required: true
          in: path
          description: Conversation ID as string
          example: tDtDnQdgm2LXpyiqYvZ6
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteConversationResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
      tags:
        - Conversations
      security:
        - locationBearerToken: []
  /conversations/messages:
    post:
      operationId: sendMessage
      summary: Send Message
      description: Send a new message via the specified provider
      x-ApiVersion: '2021-04-15'
      x-FeatureName: conversations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendMessageInput'
      responses:
        '200':
          description: Created the message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendMessageResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
      tags:
        - Conversations
      security:
        - locationBearerToken: []
  /conversations/messages/{messageId}/schedule:
    delete:
      operationId: cancelScheduledMessage
      summary: Cancel Scheduled Message
      description: |
        Cancel a scheduled message by ID
      x-ApiVersion: '2021-04-15'
      x-FeatureName: conversations
      parameters:
        - name: messageId
          required: true
          in: path
          description: Message Id
          example: ve9EPM428h8vShlRW1KT
          schema:
            type: string
      responses:
        '200':
          description: The scheduled message was cancelled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelScheduledMessageResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
      tags:
        - Conversations
      security:
        - locationBearerToken: []
  /conversations/messages/{messageId}/status:
    put:
      operationId: updateMessageStatus
      summary: Update Message Status
      description: Update the status of a message
      x-ApiVersion: '2021-04-15'
      x-FeatureName: conversations
      parameters:
        - name: messageId
          required: true
          in: path
          description: Message Id
          example: ve9EPM428h8vShlRW1KT
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMessageStatusInput'
      responses:
        '200':
          description: Created the message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendMessageResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
      tags:
        - Conversations
      security:
        - locationBearerToken: []
  /conversations/messages/{messageId}/locations/{locationId}/recording:
    get:
      operationId: getRecording
      summary: Get Recording
      description: Get the recording for a message by passing the message ID
      x-ApiVersion: '2021-04-15'
      x-FeatureName: conversations
      parameters:
        - name: locationId
          required: true
          in: path
          description: Location ID as string
          example: tDtDnQdgm2LXpyiqYvZ6
          schema:
            type: string
        - name: messageId
          required: true
          in: path
          description: Message ID as string
          example: tDtDnQdgm2LXpyiqYvZ6
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          headers:
            content-type:
              schema:
                type: string
                enum:
                  - audio/x-wav
            content-disposition:
              schema:
                type: string
                enum:
                  - Attachment; filename=audio.wav
          content:
            audio/x-wav:
              schema:
                type: string
                format: binary
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
      tags:
        - Conversations
      security:
        - locationBearerToken: []
  /conversations/messages/email/{emailMessageId}/schedule:
    delete:
      operationId: cancelScheduledEmailMessage
      summary: Cancel Scheduled Email Message
      description: Cancel a scheduled email message by ID
      x-FeatureName: conversations
      parameters:
        - name: emailMessageId
          required: true
          in: path
          description: Email Message Id
          example: ve9EPM428h8vShlRW1KT
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelScheduledMessageResponse'
      tags:
        - Conversations
      security:
        - locationBearerToken: []
  /conversations/messages/inbound:
    post:
      operationId: addInboundMessage
      summary: Add Inbound Message
      description: Add an inbound message received at an external provider
      x-ApiVersion: '2021-04-15'
      x-FeatureName: conversations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddInboundMessageInput'
      responses:
        '200':
          description: Created the message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessMessageResponseDto'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
      tags:
        - Conversations
      security:
        - locationBearerToken: []
  /conversations/messages/upload:
    post:
      operationId: uploadMessageAttachments
      summary: Upload Message Attachments
      description: |
        Post the necessary fields for the API to upload files. The files need to
        be a buffer with the key "fileAttachment".

        The following file types are accepted:
        - `JPG`
        - `JPEG`
        - `PNG`
        - `MP4`
        - `MPEG`
        - `ZIP`
        - `RAR`
        - `PDF`
        - `DOC`
        - `DOCX`
        - `TXT`

        The API will return an object with the URLs
      x-ApiVersion: '2021-04-15'
      x-FeatureName: conversations
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadMessageAttachmentInput'
      responses:
        '200':
          description: Uploaded the file successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadMessageAttachmentResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '413':
          description: Payload Too Large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadFilesErrorResponseDto'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadFilesErrorResponseDto'
      tags:
        - Conversations
      security:
        - locationBearerToken: []
  #endregion Conversations

  #region Forms
  /forms/:
    get:
      operationId: listForms
      summary: List Forms
      description: |
        Get a list of forms in a location. 

        The response will be paginated and limited to a maximum of 50 forms per page.
      x-ApiVersion: '2021-07-28'
      x-FeatureName: forms
      parameters:
        - name: locationId
          required: true
          in: query
          example: ve9EPM428h8vShlRW1KT
          schema:
            type: string
        - name: skip
          schema:
            type: number
          required: false
          in: query
          example: 0
        - name: limit
          required: false
          in: query
          description: |
            The number of records to return per page. Defaults to 10. Maximum 
            allowed value is 50.
          schema:
            type: number
            default: 10
            maximum: 50
        - name: type
          required: false
          in: query
          example: folder
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFormsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
      tags:
        - Forms
      security:
        - locationBearerToken: []
  /forms/submissions:
    get:
      operationId: listFormsSubmissions
      summary: List Forms Submissions
      description: Get a list of forms submissions in a location
      x-ApiVersion: '2021-07-28'
      x-FeatureName: forms
      parameters:
        - name: locationId
          required: true
          in: query
          example: ve9EPM428h8vShlRW1KT
          schema:
            type: string
        - name: page
          required: false
          in: query
          example: 1
          description: Page No. By default it will be 1
          schema:
            default: 1
            type: number
        - name: limit
          required: false
          in: query
          example: 20
          description: Limit Per Page records count. will allow maximum up to 100 and default will be 20
          schema:
            default: 20
            type: number
        - name: formId
          required: false
          in: query
          example: jjusM6EOngDExnbo2DbU
          description: Filter submission by form id
          schema:
            type: string
        - name: q
          required: false
          in: query
          example: john@deo.com
          description: Filter by contactId, name, email or phone no.
          schema:
            type: string
        - name: startAt
          required: false
          in: query
          example: '2020-11-14'
          description: Get submission by starting of this date. By default it will be same date of last month(YYYY-MM-DD).
          schema:
            type: string
        - name: endAt
          required: false
          in: query
          example: '2020-12-14'
          description: Get submission by ending of this date. By default it will be current date(YYYY-MM-DD).
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFormsSubmissionsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Forms
      security:
        - locationBearerToken: []
  /forms/upload-custom-files:
    post:
      operationId: uploadFileToCustomFields
      summary: Upload Files To Custom Fields
      description: |
        Post the necessary fields for the API to upload files. The files need to
        be a buffer with the key "<custom_field_id>_<file_id>", where 
        `<custom_field_id>` is the ID of your custom field and `<file_id>` is a 
        randomly generated id (or UUID).

        There is support for multiple file uploads as well. Have multiple fields
        in the format mentioned.

        File size is limited to 50 MB and the following file types are accepted: 
        - `PDF`
        - `DOCX`
        - `DOC`
        - `JPG`
        - `JPEG`
        - `PNG`
        - `GIF`
        - `CSV`
        - `XLSX`
        - `XLS`
        - `MP4`
        - `MPEG`
        - `ZIP`
        - `RAR`
        - `TXT`
        - `SVG`

        The API will return the updated contact object
      x-ApiVersion: '2021-07-28'
      x-FeatureName: forms
      parameters:
        - name: contactId
          required: true
          in: query
          example: dtEv6KtI27yF92YPm3Zz
          description: Contact ID to upload the file to.
          schema:
            type: string
        - name: locationId
          required: true
          in: query
          example: quXmPY59n1zgGBabY1bZ
          description: Location ID of the contact.
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data: {}
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
      tags:
        - Forms
      security:
        - locationBearerToken: []
  #endregion Forms

  #region Locations
  /locations/:
    post:
      operationId: createLocation
      summary: Create Location
      description: Create a new location/sub-account based on the data provided
      x-ApiVersion: '2021-07-28'
      x-FeatureName: locations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLocationInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLocationResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
      tags:
        - Locations
      security:
        - agencyBearerToken: []
  /locations/search:
    get:
      operationId: searchLocations
      summary: Search Locations
      description: Search Locations
      x-ApiVersion: '2021-07-28'
      x-FeatureName: locations
      parameters:
        - name: companyId
          required: false
          in: query
          description: The company/agency id on which you want to perform the search
          example: 5DP4iH6HLkQsiKESj6rh
          schema:
            type: string
        - name: skip
          required: false
          in: query
          example: '1'
          description: The value by which the results should be skipped. Default will be 0
          schema:
            default: '0'
            type: string
        - name: limit
          required: false
          in: query
          example: '10'
          description: The value by which the results should be limited. Default will be 10
          schema:
            default: '10'
            type: string
        - name: order
          required: false
          in: query
          example: asc
          description: The order in which the results should be returned - Allowed values asc, desc. Default will be asc
          schema:
            default: asc
            type: string
        - name: email
          required: false
          in: query
          example: johndoe@mail.com
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchLocationsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Location Search
      security:
        - locationBearerToken: []
        - agencyBearerToken: []
  /locations/{locationId}:
    get:
      operationId: getLocation
      summary: Get Location
      description: Get details of a location by passing the location id
      x-ApiVersion: '2021-07-28'
      x-FeatureName: locations
      parameters:
        - name: locationId
          required: true
          in: path
          description: Location Id
          example: ve9EPM428h8vShlRW1KT
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLocationResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Locations
      security:
        - locationBearerToken: []
        - agencyBearerToken: []
    put:
      operationId: updatelocation
      summary: Update Location
      description: Update a location/sub-account based on the data provided
      x-ApiVersion: '2021-07-28'
      x-FeatureName: locations
      parameters:
        - name: locationId
          required: true
          in: path
          description: Location Id
          example: ve9EPM428h8vShlRW1KT
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLocationInput'
      responses:
        '200':
          description: Successful update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLocationResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
      tags:
        - Locations
      security:
        - locationBearerToken: []
        - agencyBearerToken: []
    delete:
      operationId: deleteLocation
      summary: Delete Location
      description: Delete a location/sub-account from the company
      x-ApiVersion: '2021-07-28'
      x-FeatureName: locations
      parameters:
        - name: locationId
          required: true
          in: path
          description: Location Id
          example: ve9EPM428h8vShlRW1KT
          schema:
            type: string
        - name: deleteTwilioAccount
          required: true
          in: query
          description: Boolean value to indicate whether to delete Twilio Account or not
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLocationResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
      tags:
        - Locations
      security:
        - locationBearerToken: []
        - agencyBearerToken: []
  /locations/{locationId}/tags:
    get:
      operationId: listLocationTags
      summary: List Location Tags
      description: Get a list of tags defined in a location
      x-ApiVersion: '2021-07-28'
      x-FeatureName: locations
      parameters:
        - name: locationId
          required: true
          in: path
          description: Location Id
          example: ve9EPM428h8vShlRW1KT
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationTagsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Location Tags
      security:
        - locationBearerToken: []
    post:
      operationId: createTag
      summary: Create Tag
      description: Create tag
      x-ApiVersion: '2021-07-28'
      x-FeatureName: locations
      parameters:
        - name: locationId
          required: true
          in: path
          description: Location Id
          example: ve9EPM428h8vShlRW1KT
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationTagInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationTagResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Location Tags
      security:
        - locationBearerToken: []
  /locations/{locationId}/tags/{tagId}:
    get:
      operationId: getTag
      summary: Get Tag
      description: Get a loation tag by ID
      x-ApiVersion: '2021-07-28'
      x-FeatureName: locations
      parameters:
        - name: locationId
          required: true
          in: path
          description: Location Id
          example: ve9EPM428h8vShlRW1KT
          schema:
            type: string
        - name: tagId
          required: true
          in: path
          description: Tag Id
          example: flGwEuzsfJOia1i1ikRN
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationTagResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Location Tags
      security:
        - locationBearerToken: []
    put:
      operationId: updateTag
      summary: Update Tag
      description: Update a location tag by ID
      x-ApiVersion: '2021-07-28'
      x-FeatureName: locations
      parameters:
        - name: locationId
          required: true
          in: path
          description: Location Id
          example: ve9EPM428h8vShlRW1KT
          schema:
            type: string
        - name: tagId
          required: true
          in: path
          description: Tag Id
          example: flGwEuzsfJOia1i1ikRN
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationTagInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationTagResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Location Tags
      security:
        - locationBearerToken: []
    delete:
      operationId: deleteTag
      summary: Delete Tag
      description: Delete a location tag by ID
      x-ApiVersion: '2021-07-28'
      x-FeatureName: locations
      parameters:
        - name: locationId
          required: true
          in: path
          description: Location Id
          example: ve9EPM428h8vShlRW1KT
          schema:
            type: string
        - name: tagId
          required: true
          in: path
          description: Tag Id
          example: flGwEuzsfJOia1i1ikRN
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLocationTagResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Location Tags
      security:
        - locationBearerToken: []
  /locations/{locationId}/tasks/search:
    post:
      operationId: searchLocationTasks
      summary: Search Location Tasks
      description: |
        Search tasks in a location based on the search parameters provided
      x-ApiVersion: '2021-07-28'
      x-FeatureName: locations
      parameters:
        - name: locationId
          required: true
          in: path
          description: Location Id
          example: ve9EPM428h8vShlRW1KT
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchLocationTasksInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchLocationTasksResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Location Tasks
      security:
        - locationBearerToken: []
  /locations/{locationId}/customFields:
    get:
      operationId: listCustomFields
      summary: List Custom Fields
      description: Get a list of custom fields in a location
      x-ApiVersion: '2021-07-28'
      x-FeatureName: locations
      parameters:
        - name: locationId
          required: true
          in: path
          description: Location Id
          example: ve9EPM428h8vShlRW1KT
          schema:
            type: string
        - name: model
          required: false
          in: query
          description: Model of the custom field you want to retrieve
          example: opportunity
          schema:
            enum:
              - contact
              - opportunity
              - all
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCustomFieldsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Custom Fields
      security:
        - locationBearerToken: []
    post:
      operationId: createCustomField
      summary: Create Custom Field
      description: Create custom field
      x-ApiVersion: '2021-07-28'
      x-FeatureName: locations
      parameters:
        - name: locationId
          required: true
          in: path
          description: Location Id
          example: ve9EPM428h8vShlRW1KT
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomFieldInput'
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Custom Fields
      security:
        - locationBearerToken: []
  /locations/{locationId}/customFields/{id}:
    get:
      operationId: getCustomField
      summary: Get Custom Field
      description: Get a custom field by ID
      x-ApiVersion: '2021-07-28'
      x-FeatureName: locations
      parameters:
        - name: locationId
          required: true
          in: path
          description: Location Id
          example: ve9EPM428h8vShlRW1KT
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: Custom Field Id
          example: 00NhGCcN1tlO8ZHcu7Wb
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Custom Fields
      security:
        - locationBearerToken: []
    put:
      operationId: updateCustomField
      summary: Update Custom Field
      description: Update custom field
      x-ApiVersion: '2021-07-28'
      x-FeatureName: locations
      parameters:
        - name: locationId
          required: true
          in: path
          description: Location Id
          example: ve9EPM428h8vShlRW1KT
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: Custom Field Id
          example: 00NhGCcN1tlO8ZHcu7Wb
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomFieldInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Custom Fields
      security:
        - locationBearerToken: []
    delete:
      operationId: deleteCustomField
      summary: Delete Custom Field
      description: Delete custom field
      x-ApiVersion: '2021-07-28'
      x-FeatureName: locations
      parameters:
        - name: locationId
          required: true
          in: path
          description: Location Id
          example: ve9EPM428h8vShlRW1KT
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: Custom Field Id
          example: 00NhGCcN1tlO8ZHcu7Wb
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCustomFieldResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Custom Fields
      security:
        - locationBearerToken: []
  /locations/{locationId}/customValues:
    get:
      operationId: listCustomValues
      summary: List Custom Values
      description: Get a list of custom values in a location
      x-ApiVersion: '2021-07-28'
      x-FeatureName: locations
      parameters:
        - name: locationId
          required: true
          in: path
          description: Location Id
          example: ve9EPM428h8vShlRW1KT
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCustomValuesResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
      tags:
        - Custom Values
      security:
        - locationBearerToken: []
    post:
      operationId: createCustomValue
      summary: Create Custom Value
      description: Create custom value
      x-ApiVersion: '2021-07-28'
      x-FeatureName: locations
      parameters:
        - name: locationId
          required: true
          in: path
          description: Location Id
          example: ve9EPM428h8vShlRW1KT
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomValueInput'
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomValueResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Custom Values
      security:
        - locationBearerToken: []
  /locations/{locationId}/customValues/{id}:
    get:
      operationId: getCustomValue
      summary: Get Custom Value
      description: Get custom value
      x-ApiVersion: '2021-07-28'
      x-FeatureName: locations
      parameters:
        - name: locationId
          required: true
          in: path
          description: Location Id
          example: ve9EPM428h8vShlRW1KT
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: Custom Value Id
          example: kOBjMVAJhFuUeYIojVet
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomValueResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Custom Values
      security:
        - locationBearerToken: []
    put:
      operationId: updateCustomValue
      summary: Update Custom Value
      description: Update custom value
      x-ApiVersion: '2021-07-28'
      x-FeatureName: locations
      parameters:
        - name: locationId
          required: true
          in: path
          description: Location Id
          example: ve9EPM428h8vShlRW1KT
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: Custom Value Id
          example: kOBjMVAJhFuUeYIojVet
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomValueInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomValueResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Custom Values
      security:
        - bearer: []
    delete:
      operationId: deleteCustomValue
      summary: Delete Custom Value
      description: Delete custom value
      x-ApiVersion: '2021-07-28'
      x-FeatureName: locations
      parameters:
        - name: locationId
          required: true
          in: path
          description: Location Id
          example: ve9EPM428h8vShlRW1KT
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: Custom Value Id
          example: kOBjMVAJhFuUeYIojVet
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCustomValueResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Custom Values
      security:
        - locationBearerToken: []
  /locations/{locationId}/templates:
    get:
      operationId: listEmailAndSmsTemplates
      summary: List Email & SMS Templates
      description: GET a list of email and sms templates in a location
      x-ApiVersion: '2021-07-28'
      x-FeatureName: locations
      parameters:
        - name: deleted
          required: false
          in: query
          example: false
          schema:
            default: false
            type: boolean
        - name: skip
          required: false
          in: query
          example: '1'
          schema:
            default: '0'
            type: string
        - name: limit
          required: false
          in: query
          example: '25'
          schema:
            default: '25'
            type: string
        - name: type
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/TemplateType'
        - name: locationId
          required: true
          in: path
          description: Location Id
          example: ve9EPM428h8vShlRW1KT
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTemplatesResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Location Templates
      security:
        - locationBearerToken: []
  #endregion Locations

  #region Media
  /medias/files:
    get:
      operationId: listMediaItems
      summary: List Files and Folders
      description: Get a list of files and folders from the media library
      x-FeatureName: media
      parameters:
        - name: offset
          required: false
          in: query
          description: Number of files to skip in listing
          example: '5'
          schema:
            type: string
        - name: limit
          required: false
          in: query
          description: Number of files to show in the listing
          example: '10'
          schema:
            type: string
        - name: sortBy
          required: true
          in: query
          description: Field to sorting the file listing by
          example: createdAt
          schema:
            type: string
        - name: sortOrder
          required: true
          in: query
          description: Direction in which file needs to be sorted
          example: asc
          schema:
            type: string
        - name: type
          required: false
          in: query
          description: Type
          example: file
          schema:
            type: string
        - name: query
          required: false
          in: query
          description: Query text
          example: Test file
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMediaItemsResponse'
      tags:
        - Media
      security:
        - locationBearerToken: []
  /medias/{id}:
    delete:
      operationId: deleteMediaItem
      summary: Delete File or Folder
      description: Delete file or folder from the media library by ID
      x-FeatureName: media
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Successful response
      tags:
        - Media
      security:
        - locationBearerToken: []
  /medias/upload-file:
    post:
      operationId: uploadMediaFile
      summary: Upload File into Media Library
      x-FeatureName: media
      description: |
        If `hosted` is set to `true` then `fileUrl` is required, otherwise `file`
        is required. The maximum allowed file size is 25 MB.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                hosted:
                  type: boolean
                fileUrl:
                  type: string
                name:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadMediaFileResponse'
      tags:
        - Media
      security:
        - locationBearerToken: []
  #endregion Media

  #region Opportunities
  /opportunities/:
    post:
      operationId: createOpportunity
      summary: Create Opportunity
      description: Create an opportunity
      x-ApiVersion: '2021-07-28'
      x-FeatureName: opportunities
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOpportunityInput'
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpportunityResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Opportunities
      security:
        - locationBearerToken: []
  /opportunities/{id}:
    get:
      operationId: getOpportunity
      summary: Get Opportunity
      description: Get an opportunity by ID
      x-ApiVersion: '2021-07-28'
      x-FeatureName: opportunities
      parameters:
        - name: id
          required: true
          in: path
          description: Opportunity Id
          example: yWQobCRIhRguQtD2llvk
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpportunityResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Opportunities
      security:
        - locationBearerToken: []
    delete:
      operationId: deleteOpportunity
      summary: Delete Opportunity
      description: Delete an opportunity by ID
      x-ApiVersion: '2021-07-28'
      x-FeatureName: opportunities
      parameters:
        - name: id
          required: true
          in: path
          description: Opportunity Id
          example: yWQobCRIhRguQtD2llvk
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteOpportunityResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Opportunities
      security:
        - locationBearerToken: []
    put:
      operationId: updateOpportunity
      summary: Update Opportunity
      description: Update an opportunity by ID
      x-ApiVersion: '2021-07-28'
      x-FeatureName: opportunities
      parameters:
        - name: id
          required: true
          in: path
          description: Opportunity Id
          example: yWQobCRIhRguQtD2llvk
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOpportunityInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpportunityResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Opportunities
      security:
        - locationBearerToken: []
  /opportunities/{id}/status:
    put:
      operationId: updateOpportunityStatus
      summary: Update Opportunity Status
      description: Update the status of an opportunity by ID
      x-ApiVersion: '2021-07-28'
      x-FeatureName: opportunities
      parameters:
        - name: id
          required: true
          in: path
          description: Opportunity Id
          example: yWQobCRIhRguQtD2llvk
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOpportunityStatusInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOpportunityStatusResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Opportunities
      security:
        - locationBearerToken: []
  /opportunities/upsert:
    post:
      operationId: upsertOpportunity
      summary: Upsert Opportunity
      description: Update or create an opportunity
      x-ApiVersion: '2021-07-28'
      x-FeatureName: opportunities
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertOpportunityInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertOpportunityResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Opportunities
      security:
        - locationBearerToken: []
  /opportunities/search:
    get:
      operationId: searchOpportunities
      summary: Search Opportunities
      description: Search opportunities
      x-ApiVersion: '2021-07-28'
      x-FeatureName: opportunities
      parameters:
        - name: q
          required: false
          in: query
          example: john@deo.com
          schema:
            type: string
        - name: location_id
          required: true
          in: query
          description: Location Id
          example: i2SpAtBVHSVea1sL6oah
          schema:
            type: string
        - name: pipeline_id
          required: false
          in: query
          example: bCkKGpDsyPP4peuKowkG
          description: Pipeline Id
          schema:
            type: string
        - name: pipeline_stage_id
          required: false
          in: query
          example: 7915dedc-8f18-44d5-8bc3-77c04e994a10
          description: stage Id
          schema:
            type: string
        - name: contact_id
          required: false
          in: query
          example: WFwVrSSjZ2CNHbZThQX2
          description: Contact Id
          schema:
            type: string
        - name: status
          required: false
          in: query
          schema:
            enum:
              - open
              - won
              - lost
              - abandoned
              - all
            type: string
        - name: assigned_to
          required: false
          in: query
          example: 082goXVW3lIExEQPOnd3
          schema:
            type: string
        - name: campaignId
          required: false
          in: query
          example: Y2I9XM7aO1hncuSOlc9L
          description: Campaign Id
          schema:
            type: string
        - name: id
          required: false
          in: query
          description: Opportunity Id
          example: 123akv4LFn6C9frZoy3e
          schema:
            type: string
        - name: order
          required: false
          in: query
          example: added_asc
          schema:
            type: string
        - name: endDate
          required: false
          in: query
          description: End date
          example: mm-dd-yyyy
          schema:
            type: string
        - name: startAfter
          required: false
          in: query
          description: Start After
          example: '1628008053263'
          schema:
            type: string
        - name: startAfterId
          required: false
          in: query
          example: UIaE1WjAwWKdlyD7osQI
          description: Start After Id
          schema:
            type: string
        - name: date
          required: false
          in: query
          description: Start date
          example: mm-dd-yyyy
          schema:
            type: string
        - name: country
          required: false
          in: query
          example: US
          schema:
            type: string
        - name: page
          required: false
          in: query
          schema:
            default: 1
            type: number
        - name: limit
          required: false
          in: query
          description: Limit Per Page records count. will allow maximum up to 100 and default will be 20
          schema:
            default: 20
            type: number
        - name: getTasks
          required: false
          in: query
          description: get Tasks in contact
          example: false
          schema:
            type: boolean
        - name: getNotes
          required: false
          in: query
          description: get Notes in contact
          example: false
          schema:
            type: boolean
        - name: getCalendarEvents
          required: false
          in: query
          description: get Calender event in contact
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchOpportunitiesResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Opportunities
      security:
        - locationBearerToken: []
  /opportunities/pipelines:
    get:
      operationId: listPipelines
      summary: List Pipelines
      description: Get a list of pipelines in a location
      x-ApiVersion: '2021-07-28'
      x-FeatureName: opportunities
      parameters:
        - name: locationId
          required: true
          in: query
          example: ve9EPM428h8vShlRW1KT
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPipelinesResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
      tags:
        - Pipelines
      security:
        - locationBearerToken: []
  #endregion Opportunities

  #region OAuth
  /oauth/token:
    post:
      operationId: getAccessToken
      summary: Get Access Token
      description: |
        Use Access Tokens to access GoHighLevel resources on behalf of an authenticated location/company.
      x-FeatureName: oauth
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GetAccessTokenInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccessCodeSuccessfulResponseDto'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - OAuth
  /oauth/locationToken:
    post:
      operationId: getLocationAccessToken
      summary: Get Location Access Token
      description: Generate location-level access tokens
      x-ApiVersion: '2021-07-28'
      x-FeatureName: oauth
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GetLocationAccessTokenInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLocationAccessTokenResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - OAuth
      security:
        - agencyBearerToken: []
  /oauth/installedLocations:
    get:
      operationId: getInstalledLocationsForApp
      summary: Get Installed Locations For App
      description: Get a list of locations where the specified app is installed
      x-ApiVersion: '2021-07-28'
      x-FeatureName: oauth
      parameters:
        - name: skip
          required: false
          in: query
          example: '1'
          description: Parameter to skip the number installed locations
          schema:
            default: '0'
            type: string
        - name: limit
          required: false
          in: query
          example: '10'
          description: Parameter to limit the number installed locations
          schema:
            default: '20'
            type: string
        - name: query
          required: false
          in: query
          example: location name
          description: Parameter to search for the installed location by name
          schema:
            type: string
        - name: isInstalled
          required: false
          in: query
          example: true
          description: Filters out location which are installed for specified app under the specified company
          schema:
            type: boolean
        - name: companyId
          required: true
          in: query
          example: tDtDnQdgm2LXpyiqYvZ6
          description: Parameter to search by the companyId
          schema:
            type: string
        - name: appId
          required: true
          in: query
          example: tDtDnQdgm2LXpyiqYvZ6
          description: Parameter to search by the appId
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInstalledLocationsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - OAuth
      security:
        - agencyBearerToken: []
  #endregion OAuth

  #region Snapshots
  /snapshots/:
    get:
      operationId: listSnapshots
      summary: List Snapshots
      description: Get a list of all own and imported Snapshots
      x-ApiVersion: '2021-07-28'
      x-FeatureName: snapshots
      parameters:
        - name: companyId
          required: true
          in: query
          example: 5D112kQsiKESj6rash
          description: Company Id
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSnapshotsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
      tags:
        - Snapshots
      security:
        - agencyBearerToken: []
  #endregion Snapshots

  #region Surveys
  /surveys/:
    get:
      operationId: listSurveys
      summary: List Surveys
      description: Get a list of surveys in a location
      x-ApiVersion: '2021-07-28'
      x-FeatureName: surveys
      parameters:
        - name: locationId
          required: true
          in: query
          example: ve9EPM428h8vShlRW1KT
          schema:
            type: string
        - name: skip
          required: false
          in: query
          example: 0
          schema:
            type: number
        - name: limit
          required: false
          in: query
          example: 20
          description: |
            The number of records to return per page. Defaults to 10. Maximum 
            allowed value is 50.
          schema:
            type: number
            default: 10
            maximum: 50
        - name: type
          schema:
            type: string
          required: false
          in: query
          example: folder
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSurveysResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
      tags:
        - Surveys
      security:
        - locationBearerToken: []
  /surveys/submissions:
    get:
      operationId: listSurveysSubmissions
      summary: List Survey Submissions
      description: Get a list of survey submissions
      x-ApiVersion: '2021-07-28'
      x-FeatureName: surveys
      parameters:
        - name: locationId
          required: true
          in: query
          example: ve9EPM428h8vShlRW1KT
          schema:
            type: string
        - name: page
          required: false
          in: query
          example: 1
          description: Page No. By default it will be 1
          schema:
            default: 1
            type: number
        - name: limit
          required: false
          in: query
          example: 20
          description: Limit Per Page records count. will allow maximum up to 100 and default will be 20
          schema:
            default: 20
            type: number
        - name: surveyId
          description: Filter submission by survey id
          required: false
          in: query
          example: jjusM6EOngDExnbo2DbU
          schema:
            type: string
        - name: q
          required: false
          in: query
          example: john@deo.com
          description: Filter by contactId, name, email or phone no.
          schema:
            type: string
        - name: startAt
          required: false
          in: query
          example: '2020-11-14'
          description: Get submission by starting of this date. By default it will be same date of last month(YYYY-MM-DD).
          schema:
            type: string
        - name: endAt
          required: false
          in: query
          example: '2020-12-14'
          description: Get submission by ending of this date. By default it will be current date(YYYY-MM-DD).
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSurveySubmissionsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Surveys
      security:
        - locationBearerToken: []
  #endregion Surveys

  #region Trigger Links
  /links/:
    get:
      operationId: listTriggerLinks
      summary: List Trigger Links
      description: Get a list of trigger links in a location
      x-ApiVersion: '2021-04-15'
      x-FeatureName: trigger links
      parameters:
        - name: locationId
          required: true
          in: query
          example: ve9EPM428h8vShlRW1KT
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTriggerLinksResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
      tags:
        - Trigger Links
      security:
        - locationBearerToken: []
    post:
      operationId: createTriggerLink
      summary: Create Trigger Link
      description: Create a trigger link
      x-ApiVersion: '2021-04-15'
      x-FeatureName: trigger links
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TriggerLinkInput'
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TriggerLinkResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Trigger Links
      security:
        - locationBearerToken: []
  /links/{linkId}:
    put:
      operationId: updateTriggerLink
      summary: Update Trigger Link
      description: Update a trigger link by ID
      x-ApiVersion: '2021-04-15'
      x-FeatureName: trigger links
      parameters:
        - name: linkId
          required: true
          in: path
          description: Link Id
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTriggerLinkInput'
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TriggerLinkResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Trigger Links
      security:
        - locationBearerToken: []
    delete:
      operationId: deleteTriggerLink
      summary: Delete Trigger Link
      description: Delete a trigger link by ID
      x-ApiVersion: '2021-04-15'
      x-FeatureName: trigger links
      parameters:
        - name: linkId
          required: true
          in: path
          description: Link Id
          schema:
            type: string
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTriggerLinkResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Trigger Links
      security:
        - locationBearerToken: []
  #endregion Trigger Links

  #region Users
  /users/:
    get:
      operationId: listUsers
      summary: List Users
      description: |
        Get a list of users

        This endpoint supports two modes of operation: location and agency

        ## Listing users in a location

        Provide the location ID in the `locationId` query parameter and provide
        a location-level access token in the `Authorization` header.

        ## Listing users in any location of the agency

        Provide an agency-level access token in the `Authorization` header.
      x-ApiVersion: '2021-07-28'
      x-FeatureName: users
      parameters:
        - name: locationId
          required: true
          in: query
          example: ve9EPM428h8vShlRW1KT
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationUsersResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
      tags:
        - Users
      security:
        - locationBearerToken: []
        - agencyBearerToken: []
    post:
      operationId: createUser
      summary: Create User
      description: Create a user
      x-ApiVersion: '2021-07-28'
      x-FeatureName: users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserInput'
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Users
      security:
        - locationBearerToken: []
        - agencyBearerToken: []
  /users/{userId}:
    get:
      operationId: getUser
      summary: Get User
      description: Get a user by ID
      x-ApiVersion: '2021-07-28'
      x-FeatureName: users
      parameters:
        - name: userId
          required: true
          in: path
          description: User Id
          example: ve9EPM428h8vShlRW1KT
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Users
      security:
        - locationBearerToken: []
        - agencyBearerToken: []
    put:
      operationId: updateUser
      summary: Update User
      description: Update a user by ID
      x-ApiVersion: '2021-07-28'
      x-FeatureName: users
      parameters:
        - name: userId
          required: true
          in: path
          description: User Id
          example: ve9EPM428h8vShlRW1KT
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Users
      security:
        - locationBearerToken: []
        - agencyBearerToken: []
    delete:
      operationId: deleteUser
      summary: Delete User
      description: Delete a user by ID
      x-ApiVersion: '2021-07-28'
      x-FeatureName: users
      parameters:
        - name: userId
          required: true
          in: path
          description: User Id
          example: ve9EPM428h8vShlRW1KT
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteUserResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Users
      security:
        - locationBearerToken: []
        - agencyBearerToken: []
  /users/search:
    get:
      operationId: searchUsers
      summary: Search Users
      description: Search users
      x-ApiVersion: '2021-07-28'
      x-FeatureName: users
      parameters:
        - name: companyId
          required: true
          in: query
          example: 5DP41231LkQsiKESj6rh
          description: Company ID in which the search needs to be performed
          schema:
            type: string
        - name: query
          required: false
          in: query
          example: John
          description: The search term for the user is matched based on the user full name, email or phone
          schema:
            type: string
        - name: skip
          required: false
          in: query
          example: '1'
          description: No of results to be skipped before returning the result
          schema:
            default: '0'
            type: string
        - name: limit
          required: false
          in: query
          example: '10'
          description: No of results to be limited before returning the result
          schema:
            default: '25'
            type: string
        - name: locationId
          required: false
          in: query
          example: 5DP41231LkQsiKESj6rh
          description: |
            Location ID in which the search needs to be performed. Omit to
            search all users in the agency.
          schema:
            type: string
        - name: type
          required: false
          in: query
          example: agency
          description: Type of the users to be filtered in the search
          schema:
            type: string
        - name: role
          required: false
          in: query
          example: admin
          description: Role of the users to be filtered in the search
          schema:
            type: string
        - name: ids
          required: false
          in: query
          example: 5DP4iH6HLkQsiKESj6rh,5DP4iH6HLkQsiKESj34h
          description: List of User IDs to be filtered in the search
          schema:
            type: string
        - name: sort
          required: false
          in: query
          example: dateAdded
          description: The field on which sort is applied in which the results need to be sorted. Default is based on the first and last name
          schema:
            type: string
        - name: sortDirection
          required: false
          in: query
          example: asc
          description: The direction in which the results need to be sorted
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchUsersResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Users
      security:
        - locationBearerToken: []
        - agencyBearerToken: []
  #endregion Users

  #region Workflows
  /workflows/:
    get:
      operationId: listWorkflow
      summary: List Workflows
      description: Get a list of workflows in a location
      x-ApiVersion: '2021-07-28'
      x-FeatureName: Workflows
      parameters:
        - name: locationId
          required: true
          in: query
          example: ve9EPM428h8vShlRW1KT
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkflowsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedDto'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityDto'
      tags:
        - Workflows
      security:
        - locationBearerToken: []
  #endregion Workflows
